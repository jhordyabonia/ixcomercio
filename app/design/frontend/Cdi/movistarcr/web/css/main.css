@font-face {
  font-family: "Frankfurter W05 Regular";
  src: url("../fonts/fka/545b8c4b-ee94-47dd-a9b0-55881ceeeeaa.eot?#iefix") format("eot"), url("../fonts/fka/c469a796-c5e2-4ff1-b252-ef9ecaf27393.woff") format("woff"), url("../fonts/fka/be98b0c8-3103-4e5d-80b6-1a34d2c6734d.ttf") format("truetype"); }

@font-face {
  font-family: 'fontello';
  src: url("../fonts/fontello/fontello.eot?25926270");
  src: url("../fonts/fontello/fontello.eot?25926270#iefix") format("embedded-opentype"), url("../fonts/fontello/fontello.woff?25926270") format("woff"), url("../fonts/fontello/fontello.ttf?25926270") format("truetype"), url("../fonts/fontello/fontello.svg?25926270#fontello") format("svg");
  font-weight: normal;
  font-style: normal; }

/*** fonts movistar ****/
@font-face {
  font-family: 'Telefonica-Bold';
  src: url("../fonts/movistar/Telefonica-Bold.eot");
  src: url("../fonts/movistar/Telefonica-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/movistar/Telefonica-Bold.woff2") format("woff2"), url("../fonts/movistar/Telefonica-Bold.woff") format("woff"), url("../fonts/movistar/Telefonica-Bold.ttf") format("truetype"), url("../fonts/movistar/Telefonica-Bold.svg#Telefonica-Bold") format("svg");
  font-weight: bold;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Telefonica-Cap';
  src: url("../fonts/movistar/TelefonicaCap-Regular.eot");
  src: url("../fonts/movistar/TelefonicaCap-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/movistar/TelefonicaCap-Regular.woff2") format("woff2"), url("../fonts/movistar/TelefonicaCap-Regular.woff") format("woff"), url("../fonts/movistar/TelefonicaCap-Regular.ttf") format("truetype"), url("../fonts/movistar/TelefonicaCap-Regular.svg#TelefonicaCap-Regular") format("svg");
  font-weight: normal;
  font-style: italic;
  font-display: swap; }

@font-face {
  font-family: 'Telefonica-ExtraLight';
  src: url("../fonts/movistar/Telefonica-ExtraLight.eot");
  src: url("../fonts/movistar/Telefonica-ExtraLight.eot?#iefix") format("embedded-opentype"), url("../fonts/movistar/Telefonica-ExtraLight.woff2") format("woff2"), url("../fonts/movistar/Telefonica-ExtraLight.woff") format("woff"), url("../fonts/movistar/Telefonica-ExtraLight.ttf") format("truetype"), url("../fonts/movistar/Telefonica-ExtraLight.svg#Telefonica-ExtraLight") format("svg");
  font-weight: 200;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Telefonica-RegularItalic';
  src: url("../fonts/movistar/Telefonica-RegularItalic.eot");
  src: url("../fonts/movistar/Telefonica-RegularItalic.eot?#iefix") format("embedded-opentype"), url("../fonts/movistar/Telefonica-RegularItalic.woff2") format("woff2"), url("../fonts/movistar/Telefonica-RegularItalic.woff") format("woff"), url("../fonts/movistar/Telefonica-RegularItalic.ttf") format("truetype"), url("../fonts/movistar/Telefonica-RegularItalic.svg#Telefonica-RegularItalic") format("svg");
  font-weight: normal;
  font-style: italic;
  font-display: swap; }

@font-face {
  font-family: 'Telefonica-Light';
  src: url("../fonts/movistar/Telefonica-Light.eot");
  src: url("../fonts/movistar/Telefonica-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/movistar/Telefonica-Light.woff2") format("woff2"), url("../fonts/movistar/Telefonica-Light.woff") format("woff"), url("../fonts/movistar/Telefonica-Light.ttf") format("truetype"), url("../fonts/movistar/Telefonica-Light.svg#Telefonica-Light") format("svg");
  font-weight: 300;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'Telefonica-Regular';
  src: url("../fonts/movistar/Telefonica-Regular.eot");
  src: url("../fonts/movistar/Telefonica-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/movistar/Telefonica-Regular.woff2") format("woff2"), url("../fonts/movistar/Telefonica-Regular.woff") format("woff"), url("../fonts/movistar/Telefonica-Regular.ttf") format("truetype"), url("../fonts/movistar/Telefonica-Regular.svg#Telefonica-Regular") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-font-smoothing: antialiased; }
  *:hover, *:active, *:focus, *:visited {
    outline: 0 !important;
    outline: none !important; }

html {
  font-size: 14px;
  -webkit-tap-highlight-color: transparent;
  -webkit-text-size-adjust: 100%; }

body[data-container='body'] {
  color: #313235;
  font-size: 14px;
  background-color: white;
  text-align: center;
  font-family: "Telefonica-Regular";
  line-height: 2; }
  body[data-container='body'].open-menu {
    overflow: hidden; }

ul, ol {
  list-style: none; }
  ul > li, ol > li {
    margin-bottom: 0; }

html a {
  color: #019DF4;
  text-decoration: none;
  cursor: pointer; }
  html a:hover {
    color: #0B2739;
    text-decoration: none; }

a, button {
  -ms-touch-action: manipulation;
  touch-action: manipulation; }

img {
  width: 100%;
  height: auto; }

.txt-white, .txt-white h1, .txt-white h2 {
  color: #fff; }

:hover,
:active,
:focus {
  outline: 0;
  outline: none; }

section {
  width: 100%;
  padding: 20px 0;
  float: left; }
  section.section-main-slider {
    padding-top: 0; }
  section header h2 {
    margin: 0 0 40px;
    font-size: 2rem; }

.container {
  width: 100% !important;
  margin: 0 auto; }
  @media (min-width: 1200px) {
    .container {
      max-width: 1140px; } }

.container-fluid {
  max-width: 1320px; }

.fullwidth {
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  clear: both; }

select {
  height: 36px;
  padding: 8px;
  text-overflow: ellipsis;
  -webkit-transition: .5s all ease;
  -o-transition: .5s all ease;
  transition: .5s all ease; }
  select:hover {
    border-color: #aaa;
    color: #333;
    outline: none; }

input.input-text, select, textarea {
  background: #fff;
  border: 1px solid #ddd;
  color: #888;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none; }

.skip-content {
  display: none; }

.skip-links {
  clear: both;
  overflow: hidden;
  border-top: 1px solid #ededed;
  border-bottom: 1px solid #ededed; }
  @media only screen and (min-width: 771px) {
    .skip-links.header-mobile {
      display: none; } }

.skip-link {
  position: relative;
  float: left;
  width: 20%;
  height: 44px;
  background: #FFFFFF;
  color: #000000;
  line-height: 42px;
  text-align: center; }
  @media only screen and (max-width: 770px) {
    .skip-link {
      border-right: 1px solid #ededed; } }
  .skip-link .icon {
    display: inline-block;
    width: 30px;
    height: 30px;
    vertical-align: middle;
    margin-right: 3px; }

.skip-nav {
  width: 20%;
  text-align: left;
  padding: 0 0 0 15px; }
  .skip-nav .icon {
    background-position: 4px 4px;
    margin-right: 3px;
    background-image: url(../img/icons/icon_sprite.png);
    background-repeat: no-repeat;
    text-indent: -9999px; }
  .skip-nav label {
    display: inline; }

#scroll-to-top {
  display: block;
  position: fixed;
  right: 1.5%;
  width: 50px;
  height: 50px;
  border: 0 none;
  z-index: 999999;
  -webkit-transition: all 1s;
  -o-transition: all 1s;
  transition: all 1s;
  background: url(../images/arrow-up-white.png) no-repeat center;
  -webkit-background-size: 20px 20px;
          background-size: 20px;
  background-color: #000;
  overflow: hidden;
  cursor: pointer;
  opacity: 0;
  bottom: -60px;
  border-radius: 50%; }
  #scroll-to-top.show {
    opacity: 1;
    bottom: 10%; }

h1, .h1 {
  margin: 0;
  font-style: normal;
  line-height: 1.2;
  text-rendering: optimizeLegibility; }

header.page-header {
  top: 0;
  width: 100%;
  border: 0;
  padding: 0;
  margin: 0 auto;
  background: #fff;
  -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
          box-shadow: 0 0 8px rgba(0, 0, 0, 0.1);
  -webkit-transition: .5s al ease;
  -o-transition: .5s al ease;
  transition: .5s al ease;
  position: -webkit-sticky;
  position: sticky;
  z-index: 99; }
  header.page-header .header-freeshipping {
    background: #313235;
    padding: 5px 15px; }
    @media only screen and (max-width: 540px) {
      header.page-header .header-freeshipping {
        font-size: 12px; } }
    header.page-header .header-freeshipping p {
      color: #fff;
      margin: 0; }
      header.page-header .header-freeshipping p a {
        color: #fff;
        margin-left: 40px;
        text-decoration: underline; }
        header.page-header .header-freeshipping p a:after {
          content: '>'; }
  header.page-header .panel.wrapper {
    display: none; }
  header.page-header .header-wrapper {
    padding: 15px 0;
    position: relative; }
    header.page-header .header-wrapper .header-branding, header.page-header .header-wrapper .header-wrapper-nav {
      vertical-align: middle;
      display: inline-block;
      float: none; }
    @media only screen and (max-width: 540px) {
      header.page-header .header-wrapper .header-branding {
        z-index: 10;
        pointer-events: none; } }
    header.page-header .header-wrapper .header-branding .logo {
      width: 100%;
      max-width: 100%;
      margin: 0;
      float: left; }
      @media only screen and (max-width: 991px) {
        header.page-header .header-wrapper .header-branding .logo {
          width: auto;
          margin: 0 auto;
          display: inline-block;
          float: none; } }
      @media only screen and (max-width: 540px) {
        header.page-header .header-wrapper .header-branding .logo {
          pointer-events: auto; } }
      header.page-header .header-wrapper .header-branding .logo img {
        width: auto;
        height: auto;
        max-width: 100%;
        margin: 0 auto;
        float: left; }
        @media only screen and (max-width: 991px) {
          header.page-header .header-wrapper .header-branding .logo img {
            float: none; } }
        @media only screen and (max-width: 540px) {
          header.page-header .header-wrapper .header-branding .logo img {
            height: auto; } }
    header.page-header .header-wrapper .header-branding .nav-toggle {
      display: none; }
    header.page-header .header-wrapper .header-wrapper-nav {
      line-height: normal; }
      @media only screen and (max-width: 991px) {
        header.page-header .header-wrapper .header-wrapper-nav {
          left: 0;
          top: 0;
          width: 100%;
          height: 100%;
          position: absolute;
          z-index: 1; } }
      @media only screen and (max-width: 540px) {
        header.page-header .header-wrapper .header-wrapper-nav {
          z-index: 9; } }
      header.page-header .header-wrapper .header-wrapper-nav .header-toplinks {
        width: auto;
        border: 0;
        margin-bottom: 9px;
        -webkit-box-shadow: none;
                box-shadow: none;
        text-align: right;
        float: right; }
        @media only screen and (max-width: 991px) {
          header.page-header .header-wrapper .header-wrapper-nav .header-toplinks {
            right: 15px; } }
        header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language {
          float: left;
          line-height: 22px;
          padding-right: 10px;
          border-right: 1px solid #e5e5e5;
          margin-right: 0; }
          @media only screen and (max-width: 991px) {
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language {
              font-size: 16px; } }
          @media only screen and (max-width: 768px) {
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language {
              padding-right: 6px; } }
          @media only screen and (max-width: 540px) {
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language {
              border: 0;
              padding: 0; } }
          header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language .options .action.toggle:after, header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language .options .action.toggle.active:after {
            font-size: 26px;
            color: #019DF4; }
          header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language .switcher-dropdown {
            left: 50%;
            width: 100px;
            min-width: 100px;
            text-align: center;
            margin-left: -50px; }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language .switcher-dropdown:before {
              margin-left: -6px; }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language .switcher-dropdown:after {
              margin-left: -7px; }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language .switcher-dropdown:before, header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language .switcher-dropdown:after {
              left: 50%; }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .switcher-language .switcher-dropdown li a {
              text-decoration: none; }
        header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links {
          padding: 0 15px;
          border-right: 1px solid #e5e5e5;
          font-size: 14px;
          float: left; }
          @media only screen and (max-width: 768px) {
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links {
              padding: 0 12px; } }
          @media only screen and (max-width: 540px) {
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links {
              padding: 0 6px;
              border-right: 0; } }
          header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links a {
            color: #111;
            line-height: 22px;
            float: left; }
            @media only screen and (max-width: 991px) {
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links a {
                font-size: 16px; } }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links a span:not(.sign-in-label) {
              width: 20px;
              height: 20px;
              float: right;
              margin-left: 10px; }
              @media only screen and (max-width: 991px) {
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links a span:not(.sign-in-label) {
                  width: 22px;
                  height: 22px; } }
              @media only screen and (max-width: 540px) {
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links a span:not(.sign-in-label) {
                  width: 20px;
                  height: 20px; } }
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links a span:not(.sign-in-label).sign-in-icon {
                background: url(../images/icons/sign-in.png) no-repeat center;
                -webkit-background-size: 100% 100%;
                        background-size: 100%; }
                @media only screen and (max-width: 991px) {
                  header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links a span:not(.sign-in-label).sign-in-icon {
                    margin: 0; } }
            @media only screen and (max-width: 991px) {
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links a span.sign-in-label {
                display: none; } }
          header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul {
            float: left; }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user {
              margin: 0 20px 0 0;
              padding: 4px 30px 4px 0;
              position: relative;
              cursor: pointer; }
              @media only screen and (max-width: 991px) {
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user {
                  padding-top: 0; } }
              @media only screen and (max-width: 768px) {
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user {
                  margin: 0 12px 0 0; } }
              @media only screen and (max-width: 540px) {
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user {
                  /*margin: 0;
                  padding: 0 25px 4px 0;*/
                  display: none; } }
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user:before {
                top: 0;
                right: 0;
                color: #999;
                font-size: 28px;
                font-weight: bold;
                content: '\e622';
                font-family: 'icons-blank-theme';
                vertical-align: middle;
                display: inline-block;
                position: absolute; }
                @media only screen and (max-width: 540px) {
                  header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user:before {
                    width: 100%; } }
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user > a {
                display: none; }
                @media only screen and (max-width: 991px) {
                  header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user > a {
                    display: block; }
                    header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user > a span {
                      width: 20px;
                      height: 20px; } }
              @media only screen and (max-width: 991px) {
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user > li {
                  display: none; } }
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user > ul {
                left: 0;
                top: 100%;
                display: none;
                background: #fff;
                border-radius: 5px;
                text-align: center;
                padding: 10px 0;
                position: absolute;
                -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
                        box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
                z-index: 9; }
                @media only screen and (max-width: 991px) {
                  header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user > ul {
                    width: 200px;
                    left: -100px; } }
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user > ul a {
                  float: left;
                  width: 100%;
                  padding: 5px; }
                  header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user > ul a:hover {
                    background: #e8e8e8; }
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links > ul.list-registered-user:hover > ul {
                display: block; }
          header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links .wishlist {
            float: left;
            margin-top: 3px; }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .custom-top-links .wishlist a {
              width: 20px;
              height: 20px;
              background: url(../images/icons/wishlist.png) no-repeat center;
              -webkit-background-size: 100% 100%;
                      background-size: 100%;
              overflow: hidden;
              text-indent: 200%; }
        header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper {
          float: left; }
          @media only screen and (max-width: 768px) {
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper {
              width: auto; } }
          @media only screen and (max-width: 540px) {
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper {
              margin-left: 8px; } }
          header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper .action.showcart {
            width: 20px;
            height: 20px;
            background: url(../images/icons/minicart.png) no-repeat center;
            -webkit-background-size: 100% 100%;
                    background-size: 100%; }
            @media only screen and (max-width: 991px) {
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper .action.showcart {
                width: 22px;
                height: 22px; } }
            @media only screen and (max-width: 540px) {
              header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper .action.showcart {
                width: 20px;
                height: 20px; } }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper .action.showcart:before {
              display: none; }
            header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper .action.showcart .counter.qty {
              right: -115%;
              position: absolute;
              top: -60%;
              background: #019DF4;
              border-radius: 50%;
              width: 22px;
              height: 22px;
              font-size: 12px; }
              @media only screen and (max-width: 1200px) {
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper .action.showcart .counter.qty {
                  right: -60%; } }
              @media only screen and (max-width: 540px) {
                header.page-header .header-wrapper .header-wrapper-nav .header-toplinks .minicart-wrapper .action.showcart .counter.qty {
                  width: 20px;
                  height: 20px;
                  font-size: 10px;
                  line-height: 22px; } }
      header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav {
        width: 100%;
        float: right;
        text-align: right; }
        @media only screen and (max-width: 991px) {
          header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav {
            left: 0;
            width: 100%;
            height: 100%;
            max-width: 100%;
            position: absolute;
            pointer-events: none;
            z-index: 0; } }
        header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .header-account-mobile {
          display: none; }
          header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .header-account-mobile .custom-mobile-top-links {
            width: 100%;
            margin-top: 20px;
            text-align: left;
            padding: 8px 15px;
            float: left; }
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .header-account-mobile .custom-mobile-top-links .list-registered-user > li {
              font-weight: bold; }
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .header-account-mobile .custom-mobile-top-links .list-registered-user li {
              padding: 6px 0; }
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .header-account-mobile .custom-mobile-top-links .list-registered-user li, header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .header-account-mobile .custom-mobile-top-links .list-registered-user a {
              width: 100%;
              color: #000;
              font-size: 14px;
              float: left; }
        header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections {
          width: auto;
          background: none;
          text-align: right;
          display: inline-block;
          vertical-align: middle;
          margin: 0; }
          @media only screen and (max-width: 991px) {
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections {
              left: 0;
              top: 100%;
              width: 100%;
              display: none;
              position: absolute;
              background: rgba(0, 0, 0, 0);
              -webkit-transition: 1s all ease;
              -o-transition: 1s all ease;
              transition: 1s all ease;
              overflow: hidden; }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections.open {
                background: rgba(0, 0, 0, 0.6);
                display: block;
                -webkit-transition: .5s all ease;
                -o-transition: .5s all ease;
                transition: .5s all ease;
                pointer-events: auto;
                overflow: overlay; }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .nav-sections-items {
                width: 75%;
                height: auto;
                min-height: 100%;
                padding: 20px 0;
                background: #f5f5f5;
                position: absolute;
                left: -100%;
                -webkit-transition: .5s all ease;
                -o-transition: .5s all ease;
                transition: .5s all ease; }
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .nav-sections-items.open {
                  left: 0; }
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .nav-sections-items .nav-sections-item-title {
                  display: none; }
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .nav-sections-items .section-item-content {
                  margin: 0;
                  padding: 0; } }
          header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation {
            background: none; }
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu {
              padding: 0;
              text-align: left; }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0 {
                margin: 0; }
                @media only screen and (max-width: 991px) {
                  header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0 {
                    width: 100%;
                    position: relative;
                    margin-bottom: 2px; } }
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.active > .level-top {
                  color: #019DF4; }
                @media only screen and (max-width: 991px) {
                  header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.active > a:not(.ui-state-active) span:not(.ui-menu-icon) {
                    margin-left: 0; } }
                @media only screen and (max-width: 991px) {
                  header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.has-active > a:not(.ui-state-active) span:not(.ui-menu-icon) {
                    margin-left: 0; } }
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.parent > .level-top {
                  padding-right: 28px; }
                  @media only screen and (max-width: 991px) {
                    header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.parent > .level-top {
                      padding-right: 50px;
                      background: #e9e9e9; } }
                  @media only screen and (max-width: 768px) {
                    header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.parent > .level-top:after {
                      top: inherit; } }
                  @media only screen and (max-width: 991px) {
                    header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.parent > .level-top > .ui-menu-icon {
                      width: 40px;
                      color: #019DF4;
                      text-align: center; } }
                  header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.parent > .level-top > .ui-menu-icon:after {
                    font-size: 35px; }
                    @media only screen and (min-width: 991px) {
                      header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0.parent > .level-top > .ui-menu-icon:after {
                        color: #000;
                        font-size: 28px;
                        font-weight: bold; } }
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0 > .level-top {
                  color: #313235;
                  font-size: 18px;
                  line-height: normal;
                  -webkit-transition: .3s all ease;
                  -o-transition: .3s all ease;
                  transition: .3s all ease;
                  border: 0;
                  text-transform: uppercase; }
                  @media only screen and (max-width: 991px) {
                    header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0 > .level-top {
                      width: 100%;
                      line-height: 36px; } }
                  header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .level0 > .level-top:hover {
                    color: #019DF4; }
              @media only screen and (max-width: 768px) {
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .submenu {
                  top: 0 !important;
                  -webkit-box-shadow: none;
                          box-shadow: none; } }
              @media only screen and (min-width: 769px) and (max-width: 991px) {
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .submenu {
                  top: 0 !important;
                  display: none !important; } }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .submenu li a {
                padding: 12px 20px; }
                @media only screen and (max-width: 768px) {
                  header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .submenu li a {
                    border: 0 !important; } }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .submenu li.parent > a > .ui-menu-icon {
                top: 50%;
                margin-top: -10px; }
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .submenu li.parent > a > .ui-menu-icon:after {
                  color: #ccc;
                  font-size: 28px;
                  line-height: 20px; }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections .navigation ul.ui-menu .ui-menu-item {
                float: inherit; }
          @media only screen and (max-width: 540px) {
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .nav-sections.open .header-account-mobile {
              display: block; } }
        header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .wrapper-menu-mobile {
          display: inline-block; }
          @media only screen and (max-width: 991px) {
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .wrapper-menu-mobile {
              left: 15px;
              top: 50%;
              width: auto;
              vertical-align: middle;
              -webkit-transform: translate(0, -50%);
                   -o-transform: translate(0, -50%);
                      transform: translate(0, -50%);
              position: absolute;
              pointer-events: auto; } }
        header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access {
          vertical-align: middle;
          display: none; }
          @media only screen and (max-width: 991px) {
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access {
              display: inline-block; } }
          header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a {
            width: 30px;
            height: 30px;
            cursor: pointer;
            overflow: hidden;
            position: relative;
            -webkit-transition: color 125ms ease-in 0s;
            -o-transition: color 125ms ease-in 0s;
            transition: color 125ms ease-in 0s;
            display: inline-block; }
            @media only screen and (max-width: 540px) {
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a {
                width: 28px;
                height: 29px; } }
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a .cd-menu-icon {
              top: 50%;
              left: 17px;
              width: 100%;
              height: 3px;
              position: absolute;
              display: inline-block;
              background-color: #000;
              -webkit-transition: background-color 0.3s;
              -o-transition: background-color 0.3s;
              transition: background-color 0.3s;
              -webkit-transform: translateX(-50%) translateY(-50%);
              -o-transform: translateX(-50%) translateY(-50%);
                 transform: translateX(-50%) translateY(-50%);
              border-radius: 1px; }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a .cd-menu-icon:after, header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a .cd-menu-icon:before {
                content: '';
                right: 0;
                width: 100%;
                height: 100%;
                position: absolute;
                background-color: #000;
                transition: transform .3s, top .3s, background-color 0s, -webkit-transform .3s;
                border-radius: 1px; }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a .cd-menu-icon:before {
                top: -9px; }
                @media only screen and (max-width: 540px) {
                  header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a .cd-menu-icon:before {
                    top: -8px; } }
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a .cd-menu-icon:after {
                top: 9px; }
                @media only screen and (max-width: 540px) {
                  header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .quick-access a .cd-menu-icon:after {
                    top: 8px; } }
        header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .icon-search {
          margin-left: 20px;
          display: inline-block;
          vertical-align: middle; }
          @media only screen and (max-width: 540px) {
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .icon-search {
              margin-left: 10px; } }
          header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .icon-search .icon-search-button {
            width: 32px;
            height: 32px;
            background: url(../images/icons/search-white.png) no-repeat center;
            -webkit-background-size: 18px 18px;
                    background-size: 18px;
            background-color: #019DF4;
            border-radius: 50%;
            cursor: pointer;
            float: left; }
            @media only screen and (max-width: 540px) {
              header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .icon-search .icon-search-button {
                width: 28px;
                height: 28px;
                -webkit-background-size: 16px 16px;
                        background-size: 16px; } }
            header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .icon-search .icon-search-button.close {
              background: url(../images/icons/close-white.png) no-repeat center;
              -webkit-background-size: 18px 18px;
                      background-size: 18px;
              background-color: #019DF4;
              opacity: 1; }
              @media only screen and (max-width: 540px) {
                header.page-header .header-wrapper .header-wrapper-nav .wrapper-nav .icon-search .icon-search-button.close {
                  -webkit-background-size: 16px 16px;
                          background-size: 16px; } }
      @media only screen and (max-width: 991px) {
        header.page-header .header-wrapper .header-wrapper-nav .header-toplinks {
          top: 50%;
          width: auto;
          max-width: 35%;
          position: absolute;
          -webkit-transform: translate(0, -50%);
               -o-transform: translate(0, -50%);
                  transform: translate(0, -50%); } }
      @media only screen and (max-width: 540px) {
        header.page-header .header-wrapper .header-wrapper-nav .header-toplinks {
          max-width: none; } }

footer .footer-social {
  text-align: center;
  padding: 40px 15px;
  margin: 0 auto;
  float: none; }
  footer .footer-social h5 {
    color: #000; }
  footer .footer-social ul {
    margin-top: 20px;
    text-align: center; }
    footer .footer-social ul li {
      max-width: 40px;
      display: inline-block;
      margin: 0 5px; }
      footer .footer-social ul li:first-child {
        margin-left: 0; }
      footer .footer-social ul li:last-child {
        margin-right: 0; }

footer .footer-bottom .footer-nav {
  color: #000000;
  background: #F5F5F5;
  padding: 40px 0; }
  @media only screen and (max-width: 768px) {
    footer .footer-bottom .footer-nav {
      padding: 0; } }
  footer .footer-bottom .footer-nav .link-block {
    text-align: left; }
    footer .footer-bottom .footer-nav .link-block h4 {
      width: auto;
      font-family: "Telefonica-Bold";
      font-weight: bold;
      margin: 0 0 15px;
      position: relative;
      padding-bottom: 0;
      float: left; }
      @media only screen and (max-width: 991px) {
        footer .footer-bottom .footer-nav .link-block h4:after {
          content: '';
          bottom: 0;
          left: 0;
          width: 100%;
          height: 1px;
          position: absolute;
          background: #F5F5F5; } }
      footer .footer-bottom .footer-nav .link-block h4 i.icon {
        display: none; }
      @media only screen and (max-width: 991px) {
        footer .footer-bottom .footer-nav .link-block h4 {
          width: 100%;
          margin: 0;
          padding: 20px 0; }
          footer .footer-bottom .footer-nav .link-block h4:after {
            opacity: .2; }
          footer .footer-bottom .footer-nav .link-block h4 i.icon {
            top: 50%;
            right: 15px;
            width: 1em;
            position: absolute;
            display: block;
            font-size: 14px;
            font-family: 'fontello';
            font-style: normal;
            font-weight: normal;
            speak: none;
            text-decoration: inherit;
            margin-top: -7px;
            text-align: center;
            font-variant: normal;
            text-transform: none;
            line-height: 1em;
            opacity: .5; } }
    footer .footer-bottom .footer-nav .link-block ul {
      width: 100%;
      float: left; }
      @media only screen and (max-width: 991px) {
        footer .footer-bottom .footer-nav .link-block ul {
          display: none;
          padding-top: 15px; } }
      footer .footer-bottom .footer-nav .link-block ul li {
        line-height: 2em; }
        footer .footer-bottom .footer-nav .link-block ul li a {
          color: #019DF4; }
    @media only screen and (max-width: 991px) {
      footer .footer-bottom .footer-nav .link-block:last-child h4:after {
        display: none; } }

footer .footer-bottom .footer-payment {
  text-align: center;
  padding: 25px 15px;
  margin: 0 auto;
  background: #F5F5F5; }
  footer .footer-bottom .footer-payment ul {
    width: 100%;
    text-align: center;
    margin: 0; }
    footer .footer-bottom .footer-payment ul li {
      display: inline-block;
      margin: 0 5px; }
      footer .footer-bottom .footer-payment ul li:first-child {
        margin-left: 0; }
      footer .footer-bottom .footer-payment ul li:last-child {
        margin-right: 0; }
      footer .footer-bottom .footer-payment ul li img {
        width: auto;
        height: 34px; }

footer .footer-legal {
  background: #F2F2F2;
  padding: 0 15px;
  text-align: center; }
  footer .footer-legal span {
    width: 100%;
    color: #000000;
    font-size: 12px;
    text-align: center;
    padding: 10px 0;
    display: block; }

@media only screen and (max-width: 768px) {
  .magestore-bannerslider-standard {
    width: 100% !important; } }

.magestore-bannerslide-flex-slider {
  margin: 0 !important;
  overflow: hidden; }
  .magestore-bannerslide-flex-slider section {
    padding: 0; }
    .magestore-bannerslide-flex-slider section .container {
      width: 100%;
      max-width: 100%; }
      .magestore-bannerslide-flex-slider section .container .row > div {
        padding: 0; }
  .magestore-bannerslide-flex-slider .slides li {
    height: auto !important; }
  .magestore-bannerslide-flex-slider .flex-control-nav {
    bottom: 0; }
    .magestore-bannerslide-flex-slider .flex-control-nav.flex-control-paging li a {
      background: #fff; }
      .magestore-bannerslide-flex-slider .flex-control-nav.flex-control-paging li a.flex-active {
        background: #019DF4; }
  .magestore-bannerslide-flex-slider .flex-direction-nav li a {
    width: 56px;
    height: 56px; }
    .magestore-bannerslide-flex-slider .flex-direction-nav li a.flex-prev {
      background: url(../images/arrow-left.png) no-repeat 0 0;
      -webkit-background-size: 100% 100%;
              background-size: 100%; }
    .magestore-bannerslide-flex-slider .flex-direction-nav li a.flex-next {
      background: url(../images/arrow-right.png) no-repeat 0 0;
      -webkit-background-size: 100% 100%;
              background-size: 100%; }

.hero-banner {
  padding: 0;
  position: relative;
  margin-bottom: 40px; }
  @media only screen and (max-width: 650px) {
    .hero-banner {
      margin-bottom: 20px; } }
  .hero-banner img {
    width: 100%;
    float: left; }
  .hero-banner .container-fluid {
    top: 50%;
    left: 50%;
    position: absolute;
    -webkit-transform: translate(-50%, -50%);
         -o-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }
    @media only screen and (max-width: 650px) {
      .hero-banner .container-fluid {
        position: relative;
        margin: 20px 0;
        -webkit-transform: translate(0);
             -o-transform: translate(0);
                transform: translate(0);
        left: 0;
        top: 0;
        float: left; } }
  .hero-banner .wrapper-text {
    text-align: left;
    color: #2a2829;
    width: 56.33%;
    float: left; }
    .hero-banner .wrapper-text h1, .hero-banner .wrapper-text p {
      display: block; }
    .hero-banner .wrapper-text h1 {
      font-size: 54px;
      margin-bottom: 0;
      text-transform: uppercase; }
      @media only screen and (max-width: 1023px) {
        .hero-banner .wrapper-text h1 {
          font-size: 40px; } }
      @media only screen and (max-width: 650px) {
        .hero-banner .wrapper-text h1 {
          font-size: 30px; } }
    .hero-banner .wrapper-text p {
      font-size: 16px;
      font-family: "Telefonica-Regular";
      line-height: 25px; }
      @media only screen and (max-width: 768px) {
        .hero-banner .wrapper-text p {
          display: none; } }

.page-wrapper {
  min-height: auto; }
  .page-wrapper [data-content-type='row'][data-appearance='contained'] {
    max-width: 100%; }
    @media only screen and (min-width: 768px) {
      .page-wrapper [data-content-type='row'][data-appearance='contained'] {
        max-width: 100%; } }
  .page-wrapper .page-main {
    padding: 0;
    max-width: 100%; }
    .page-wrapper .page-main > .columns {
      float: left;
      width: 100%; }

.columns .column.main {
  padding-bottom: 0; }

.page-title-wrapper {
  margin: 40px 0 20px; }
  .page-title-wrapper .page-title {
    font-weight: bold;
    color: #000;
    margin: 0;
    font-family: "Telefonica-Regular"; }
    @media only screen and (max-width: 768px) {
      .page-title-wrapper .page-title {
        font-size: 30px; } }

.category-description {
  color: #666666; }
  .category-description p {
    font-size: 18px;
    line-height: 24px;
    max-width: 480px;
    margin: 0 auto; }
    @media only screen and (max-width: 768px) {
      .category-description p {
        font-size: 14px;
        line-height: 20px; } }

section {
  padding: 60px 0; }
  section.block-products-list:nth-of-type(2n-1) {
    background: #f9f9f9; }
  section .header-section {
    text-align: left; }
    section .header-section .title-section {
      color: #000;
      font-size: 34px;
      font-family: "Telefonica-Bold";
      font-weight: bold;
      margin: 0; }
      @media only screen and (max-width: 768px) {
        section .header-section .title-section {
          font-size: 30px; } }
      section .header-section .title-section ~ p {
        margin: 15px 0 0; }
  section .block-content {
    margin-top: 30px; }
  section .block-category-link {
    margin: 30px 0 0; }
    section .block-category-link.widget {
      display: inline-block; }
    section .block-category-link a {
      min-width: 200px;
      color: #019DF4;
      font-weight: 400;
      font-size: 1.4rem;
      text-transform: uppercase;
      -webkit-transition: .5s all ease;
      -o-transition: .5s all ease;
      transition: .5s all ease;
      border: 1px solid #019DF4;
      display: inline-block;
      padding: 7px 15px;
      border-radius: 3px; }
      section .block-category-link a:hover {
        color: #fff;
        background: #000;
        border-color: #000; }

.banner {
  width: 100%;
  padding: 0;
  float: left; }
  .banner.frame {
    padding: 60px; }
  .banner .text-block-banner {
    position: relative; }
  .banner .text-overlay-banner {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translateX(-50%) translateY(-50%);
         -o-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
    width: 70%;
    text-align: center; }
    .banner .text-overlay-banner.banner-text-right {
      width: 50%;
      right: 0;
      -webkit-transform: translateY(-50%) translateX(0%);
           -o-transform: translateY(-50%) translateX(0%);
              transform: translateY(-50%) translateX(0%); }
    .banner .text-overlay-banner.banner-text-left {
      width: 50%;
      left: 0;
      -webkit-transform: translateY(-50%) translateX(0%);
           -o-transform: translateY(-50%) translateX(0%);
              transform: translateY(-50%) translateX(0%); }
    .banner .text-overlay-banner h1, .banner .text-overlay-banner h1 span {
      font-family: "Telefonica-Bold";
      font-weight: normal;
      font-size: 72px;
      line-height: .9em;
      margin-bottom: .1em; }
    .banner .text-overlay-banner p {
      font-size: 16px;
      padding: 0 2em;
      font-weight: normal;
      line-height: 1.5em; }
  .banner.main-banner .text-overlay-banner h1, .banner.main-banner .text-overlay-banner h1 span, .banner.main-banner .text-overlay-banner h2, .banner.main-banner .text-overlay-banner h2 span {
    font-size: 6vw; }
  .banner.main-banner .text-overlay-banner p {
    font-size: 1.5vw; }

.category-products {
  padding: 2em 0; }

.category-callout img {
  margin: 0 auto;
  padding: 15px 0;
  width: auto;
  max-width: 100%;
  max-height: 400px; }

.category-callout h2 {
  font-weight: 700;
  padding-top: 1em; }

.category-callout .cat-product-links li {
  font-weight: 400;
  font-size: 1.2em;
  display: inline; }
  .category-callout .cat-product-links li:after {
    content: "/";
    padding: 0 1em; }
  .category-callout .cat-product-links li:last-child:after {
    content: "";
    padding: 0; }

.category-features {
  padding: 0 0 5em; }

.feature-callout {
  height: 400px;
  padding: 3em 2em;
  text-align: center; }
  .feature-callout img {
    width: 100%;
    max-width: 180px;
    margin: 0 auto;
    padding: 15px 0; }
  .feature-callout .callout-text {
    padding: 0 0 2em;
    max-width: 250px;
    margin: 0 auto; }
    .feature-callout .callout-text b {
      font-size: 1.2em; }
    .feature-callout .callout-text p {
      font-size: 1em;
      font-weight: 300; }

.banner-fullwidth {
  padding: 0;
  max-height: 620px;
  height: 240px;
  float: left; }
  @media only screen and (min-width: 768px) {
    .banner-fullwidth {
      height: 400px; } }
  @media only screen and (min-width: 1280px) {
    .banner-fullwidth {
      height: 620px; } }
  .banner-fullwidth .text-block-banner {
    width: 50%;
    position: relative;
    padding-top: 50%;
    text-align: center;
    float: right; }
    .banner-fullwidth .text-block-banner .text-overlay-banner {
      width: 80%;
      left: 10%; }
      .banner-fullwidth .text-block-banner .text-overlay-banner h1 {
        font-size: 7vw; }
      .banner-fullwidth .text-block-banner .text-overlay-banner p {
        font-size: 1.5vw;
        font-weight: normal;
        line-height: 1.5em; }

.button, .cart-table .product-cart-actions .button, #co-shipping-method-form .buttons-set .button, .footer .button {
  background: #019DF4;
  display: inline-block;
  padding: 7px 15px;
  border: 0;
  color: #fff;
  font-size: 13px;
  font-weight: normal;
  line-height: 19px;
  text-align: center;
  text-transform: uppercase;
  vertical-align: middle;
  white-space: nowrap; }
  .button:hover, .cart-table .product-cart-actions .button:hover, #co-shipping-method-form .buttons-set .button:hover, .footer .button:hover {
    color: #fff;
    background: #0B2739;
    cursor: pointer;
    border: 0; }

.page-title h1, .page-title h2, .product-name h1, .product-name .h1 {
  padding-bottom: 3px;
  text-transform: capitalize; }

.available {
  margin-bottom: 0;
  font-size: 13px;
  text-transform: uppercase; }
  .available.stock {
    color: #11B400; }
  .available.out-of-stock {
    color: #DF280A; }

.loader img {
  width: auto; }

.video-container {
  position: relative;
  padding-bottom: 56.25%;
  padding-top: 30px;
  height: 0;
  overflow: hidden; }
  .video-container iframe {
    top: 0;
    left: 0;
    width: 100%;
    height: 96%;
    position: absolute; }

.feature-icons {
  clear: both; }
  .feature-icons li {
    display: inline;
    float: left;
    width: 20%;
    text-align: center;
    margin: 30px 0;
    padding: 15px;
    line-height: 1.2em;
    min-height: 235px;
    font-weight: 100; }
  .feature-icons img {
    height: 150px;
    width: auto; }
  .feature-icons .callout-text {
    font-weight: 400; }

.product-box .box-list ul {
  text-align: center;
  line-height: 1.2em;
  margin-bottom: 30px; }
  .product-box .box-list ul li {
    display: inline;
    font-weight: 300;
    font-size: .9em; }
    .product-box .box-list ul li:after {
      content: "|";
      padding: 0 .5em; }
    .product-box .box-list ul li:last-child:after {
      content: "";
      padding: 0; }

[data-content-type='row'][data-appearance='contained'] [data-element='inner'] {
  border: 0 !important;
  margin: 0 !important;
  padding: 0 !important; }

.page-layout-2columns-left .container {
  width: 96% !important; }
  @media only screen and (max-width: 1200px) and (min-width: 769px) {
    .page-layout-2columns-left .container {
      max-width: 90% !important; } }

@media only screen and (max-width: 991px) {
  .page-layout-2columns-left .page-wrapper .page-main .sidebar-main {
    padding: 0;
    float: left;
    width: 100%; } }

@media only screen and (min-width: 768px) {
  .page-layout-2columns-left .page-wrapper .page-main .sidebar-main {
    width: 100%; } }

@media only screen and (min-width: 768px) {
  .page-layout-2columns-left .page-wrapper .page-main .column.main {
    width: 100%; } }

.filter-options .panel-group .panel {
  border-radius: 0;
  -webkit-box-shadow: none;
          box-shadow: none;
  border: 0;
  border-top: 1px solid #ddd; }
  .filter-options .panel-group .panel.panel-default > .panel-heading {
    text-align: left;
    background: none;
    border-radius: 0;
    border-bottom: 1px solid #ccc;
    -webkit-box-shadow: none;
            box-shadow: none;
    padding: 0; }
    .filter-options .panel-group .panel.panel-default > .panel-heading .panel-title a {
      width: 100%;
      font-weight: 500;
      line-height: normal;
      text-decoration: none;
      padding: 15px 30px 15px 15px;
      display: inline-block;
      -webkit-transition: .5s all ease;
      -o-transition: .5s all ease;
      transition: .5s all ease;
      background: url(../images/arrow-down-black.png) no-repeat 95% center;
      -webkit-background-size: 14px 14px;
              background-size: 14px;
      font-size: 18px; }
      .filter-options .panel-group .panel.panel-default > .panel-heading .panel-title a[aria-expanded="true"] {
        background: url(../images/arrow-up-maincolor.png) no-repeat 95% center;
        -webkit-background-size: 14px 14px;
                background-size: 14px; }
      .filter-options .panel-group .panel.panel-default > .panel-heading .panel-title a:hover {
        color: #019DF4; }
  .filter-options .panel-group .panel.panel-default .panel-collapse {
    background: #efefef; }
    .filter-options .panel-group .panel.panel-default .panel-collapse > .panel-body {
      border: 0;
      border-bottom: 1px solid #ccc;
      text-align: left;
      padding-right: 0;
      padding-left: 10px; }
      .filter-options .panel-group .panel.panel-default .panel-collapse > .panel-body .items .item {
        position: relative;
        padding-right: 25px; }
        .filter-options .panel-group .panel.panel-default .panel-collapse > .panel-body .items .item a {
          color: #000;
          font-size: 12px; }
          .filter-options .panel-group .panel.panel-default .panel-collapse > .panel-body .items .item a .count {
            color: #999;
            font-size: 12px; }
          .filter-options .panel-group .panel.panel-default .panel-collapse > .panel-body .items .item a .icon-check {
            width: 16px;
            height: 16px;
            background: #fff;
            border: 1px solid #707070;
            margin: 5px 5px 0 0;
            float: left;
            border-radius: 5px; }
        .filter-options .panel-group .panel.panel-default .panel-collapse > .panel-body .items .item.mana-selected a .icon-check {
          background: url(../images/check-white.png) no-repeat center;
          background-color: #019DF4;
          -webkit-background-size: 10px 10px;
                  background-size: 10px;
          border: 1px solid #019DF4; }

.page-products .products-grid {
  width: 100%;
  float: left; }
  .page-products .products-grid .product-items {
    width: 100%;
    float: left; }
    .page-products .products-grid .product-items > .item {
      width: 30%;
      max-width: initial;
      margin: 0 1.66% 30px;
      padding: 20px;
      float: left; }
      @media only screen and (min-width: 768px) {
        .page-products .products-grid .product-items > .item.product-item:nth-child(n) {
          margin-left: 1.66%; } }
      @media only screen and (max-width: 540px) {
        .page-products .products-grid .product-items > .item {
          width: 100%;
          max-width: 100%;
          margin: 0 0 20px; } }
      .page-products .products-grid .product-items > .item .product-item-info {
        width: auto; }

.page-products .products.wrapper ~ .toolbar-products {
  border-top: 1px solid #eee;
  border-bottom: 1px solid #eee;
  padding: 10px 0; }

.page-products .toolbar-products {
  width: 100%;
  border-top: 1px solid #eee;
  border-bottom: 1px solid #eee;
  padding: 10px 0;
  margin: 0;
  float: left; }
  @media only screen and (min-width: 768px) {
    .page-products .toolbar-products .pages {
      float: right; } }
  .page-products .toolbar-products .pages .pages-items .item {
    width: 28px;
    height: 28px;
    color: #fff;
    margin: 0 10px 0 0;
    border-radius: 50%;
    float: left; }
    .page-products .toolbar-products .pages .pages-items .item strong.page, .page-products .toolbar-products .pages .pages-items .item a {
      color: #000;
      float: left;
      width: 100%;
      line-height: 28px;
      font-size: 14px;
      border-radius: 50%; }
    .page-products .toolbar-products .pages .pages-items .item a:hover {
      background: #eee; }
    .page-products .toolbar-products .pages .pages-items .item.current {
      background: #019DF4; }
      .page-products .toolbar-products .pages .pages-items .item.current strong.page, .page-products .toolbar-products .pages .pages-items .item.current a {
        color: #fff; }
  .page-products .toolbar-products .pages .action {
    margin: 0;
    height: 28px;
    border-radius: 50%; }
    .page-products .toolbar-products .pages .action.next:before, .page-products .toolbar-products .pages .action.previous:before {
      width: 100%;
      float: left;
      font-size: 38px;
      line-height: 28px;
      margin: -1px 0 0 -5px; }
  @media only screen and (min-width: 768px) {
    .page-products .toolbar-products .limiter {
      float: left;
      text-align: left; } }
  .page-products .toolbar-products .limiter .label[for="limiter"] {
    display: none; }
  @media only screen and (min-width: 768px) {
    .page-products .toolbar-products .modes {
      display: none; } }

.toolbar-sorter .sorter-options {
  min-width: 150px;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  line-height: normal;
  padding: 8px 25px 8px 8px;
  background: url(../images/arrow-down-black.png) no-repeat 95% center;
  -webkit-background-size: 14px 14px;
          background-size: 14px;
  border-radius: 6px; }

/*---BUTTONS---*/
.action.primary, .action.primary:active, .action.primary:focus, .action.action-apply {
  width: 100%;
  color: #fff;
  background: #019DF4;
  text-transform: uppercase;
  -webkit-transition: .5s all ease;
  -o-transition: .5s all ease;
  transition: .5s all ease;
  font-size: 1.7rem;
  letter-spacing: 1px;
  font-family: "Telefonica-Regular";
  font-weight: 400;
  border-radius: 5px !important;
  border: 0; }
  .action.primary:hover, .action.primary:active:hover, .action.primary:focus:hover, .action.action-apply:hover {
    background: #000;
    border: none; }

.action.action-update {
  color: #019DF4;
  background: none;
  text-transform: uppercase;
  -webkit-transition: .5s all ease;
  -o-transition: .5s all ease;
  transition: .5s all ease;
  font-weight: 400;
  border-radius: 5px !important;
  border: 2px solid #019DF4; }
  .action.action-update:hover {
    color: #fff;
    background: #019DF4; }

.catalog-category-view .category-list .category-image {
  position: relative;
  overflow: hidden; }
  .catalog-category-view .category-list .category-image .category-data {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    color: #fff;
    position: absolute; }
    .catalog-category-view .category-list .category-image .category-data h2 {
      font-size: 26px; }
    .catalog-category-view .category-list .category-image .category-data a {
      top: 50%;
      left: 0;
      width: 100%;
      height: 100%;
      position: absolute;
      -webkit-transform: translate(0, -50%);
           -o-transform: translate(0, -50%);
              transform: translate(0, -50%);
      color: #fff;
      z-index: 2; }
    .catalog-category-view .category-list .category-image .category-data:before {
      top: 0;
      left: 0;
      content: '';
      width: 100%;
      height: 100%;
      position: absolute;
      background: rgba(0, 0, 0, 0.3);
      -webkit-transition: .5s all ease;
      -o-transition: .5s all ease;
      transition: .5s all ease;
      opacity: 0;
      z-index: 1; }
    .catalog-category-view .category-list .category-image .category-data:hover:before {
      opacity: 1; }

.products-grid .product-items {
  display: block; }
  .products-grid .product-items .item:not(.rating-summary) {
    max-width: 300px;
    padding: 20px;
    border: 1px solid #eee;
    background: #fff;
    border-radius: 5px;
    position: relative; }
    @media only screen and (max-width: 540px) {
      .products-grid .product-items .item:not(.rating-summary) {
        max-width: 100%; } }
    .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-photo {
      float: left;
      width: 100%; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-photo .product-image-wrapper {
        height: auto;
        padding-bottom: 0 !important; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-photo .product-image-wrapper img {
          margin: 0;
          position: relative;
          float: left; }
    .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag {
      top: 12px;
      left: 15px;
      width: 45px;
      height: 28px;
      color: #fff;
      font-size: 13px;
      font-weight: 500;
      text-align: center;
      position: absolute;
      border-radius: 14px;
      padding: 2px 0;
      z-index: 999; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag:nth-of-type(1) {
        width: 70px;
        padding: 2px 0;
        font-size: 13px; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag:nth-of-type(2) {
        left: 90px;
        z-index: 998; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag:nth-of-type(3) {
        left: 140px;
        z-index: 997; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag:nth-of-type(4) {
        left: 190px;
        z-index: 996; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag:nth-of-type(5) {
        left: 240px;
        z-index: 995; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag:nth-of-type(6) {
        left: 290px;
        z-index: 994; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag.disccount-tag {
        background-color: #822980; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag.new-tag {
        background-color: #b0d114; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag.bestseller-tag {
        background: url(../images/icons/tag-bestseller.png) no-repeat center;
        -webkit-background-size: auto 22px;
                background-size: auto 22px;
        background-color: #ce6b01; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-tag.downloadable-tag {
        background-color: #7b087e; }
    .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details {
      width: 100%;
      display: inline-block; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .rating-summary {
        height: auto !important; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .rating-summary .rating-result:before {
          text-align: left; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .rating-summary .rating-result > span:before {
          color: #019DF4;
          text-align: left; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .product-item-name {
        font-size: 15px;
        line-height: normal;
        font-family: "Telefonica-Regular";
        min-height: 60px; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .product-item-name a {
          color: #019DF4; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box {
        min-height: 60px; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .special-price, .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .old-price {
          width: 100%;
          display: block; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .special-price .price, .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .normal-price .price, .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .price-wrapper .price {
          font-weight: bold;
          font-size: 18px;
          display: block;
          line-height: normal; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .old-price {
          color: #999;
          font-size: 14px; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .price-label {
          display: none; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box > .price-final_price, .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .special-price .price-final_price {
          color: #313235; }
          .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box > .price-final_price .price, .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-details .price-box .special-price .price-final_price .price {
            font-size: 24px; }
    .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-actions .actions-primary {
      width: 100%;
      display: block; }
    .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-actions .actions-secondary {
      top: 5px;
      right: 0;
      width: 40px;
      padding: 0;
      position: absolute;
      z-index: 99; }
      .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-actions .actions-secondary a {
        float: left;
        width: 100%;
        color: #ccc; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-actions .actions-secondary a:hover:before {
          color: #019DF4; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-actions .actions-secondary a:before {
          color: #bbb; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-actions .actions-secondary a.towishlist:before {
          font-size: 40px; }
        .products-grid .product-items .item:not(.rating-summary) .product-item-info .product-item-actions .actions-secondary a.tocompare {
          display: none; }
  .products-grid .product-items .owl-dots {
    width: 100%;
    text-align: center;
    margin: 30px 0 0; }
    .products-grid .product-items .owl-dots .owl-dot {
      width: 12px;
      height: 12px;
      display: inline-block;
      background: #ddd;
      border-radius: 50%;
      margin: 0 5px; }
      .products-grid .product-items .owl-dots .owl-dot.active {
        background: #019DF4; }

.product-view {
  padding: 40px 0; }
  @media only screen and (max-width: 768px) {
    .product-view .container {
      max-width: 80%; } }
  @media only screen and (max-width: 560px) {
    .product-view .container {
      max-width: 100%; } }
  .product-view .name-producto-mobile {
    width: 100%;
    float: left;
    display: none; }
    @media only screen and (max-width: 768px) {
      .product-view .name-producto-mobile {
        display: block; } }
    .product-view .name-producto-mobile h2 {
      color: #000;
      text-transform: uppercase;
      font-weight: bold;
      line-height: 40px;
      margin: 30px 0; }
  .product-view .product-info_media .sticker-wrapper {
    top: 0;
    right: 15px;
    position: absolute;
    z-index: 9; }
    .product-view .product-info_media .sticker-wrapper .sticker {
      width: 80px;
      color: #fff;
      font-size: 1.17em;
      line-height: 40px;
      font-weight: bold;
      background-color: #c73615;
      -webkit-transition: .3s all ease;
      -o-transition: .3s all ease;
      transition: .3s all ease;
      margin: 0 auto;
      float: left; }
      .product-view .product-info_media .sticker-wrapper .sticker.sale {
        display: none; }
  .product-view .product-info_media .wrapper-img {
    padding: 5px;
    position: relative; }
    .product-view .product-info_media .wrapper-img > div:hover img.cloudzoom {
      opacity: 0; }
    .product-view .product-info_media .wrapper-img #zoom-btn {
      position: absolute;
      right: 4px;
      bottom: 4px;
      padding: 0 1em;
      line-height: 2.6em;
      z-index: 100;
      background-color: rgba(255, 255, 255, 0.7);
      color: #333; }
      @media only screen and (max-width: 480px) {
        .product-view .product-info_media .wrapper-img #zoom-btn {
          display: none; } }
      .product-view .product-info_media .wrapper-img #zoom-btn:hover {
        color: #1e75b4; }
  .product-view .product-info_media img.cloudzoom {
    width: 100%;
    -webkit-transition: .5s all ease;
    -o-transition: .5s all ease;
    transition: .5s all ease; }
  .product-view .product-info_media .more-images {
    max-width: 316px;
    margin: 15px auto 0; }
    .product-view .product-info_media .more-images .owl-stage {
      margin: 0 auto; }
      .product-view .product-info_media .more-images .owl-stage .owl-item {
        padding: 0 8px;
        cursor: pointer; }
    .product-view .product-info_media .more-images .owl-nav {
      background-image: none;
      text-indent: 0; }
      .product-view .product-info_media .more-images .owl-nav .owl-prev, .product-view .product-info_media .more-images .owl-nav .owl-next {
        top: 60%;
        width: 30px;
        height: 30px;
        -webkit-transition: .3s all ease;
        -o-transition: .3s all ease;
        transition: .3s all ease; }
        .product-view .product-info_media .more-images .owl-nav .owl-prev:before, .product-view .product-info_media .more-images .owl-nav .owl-next:before {
          color: #333;
          line-height: 30px;
          font-style: normal;
          font-weight: normal;
          font-variant: normal;
          text-transform: none;
          -webkit-font-smoothing: antialiased;
          -moz-osx-font-smoothing: grayscale;
          font-family: ThemeIcons;
          font-size: 20px; }
        .product-view .product-info_media .more-images .owl-nav .owl-prev:hover, .product-view .product-info_media .more-images .owl-nav .owl-next:hover {
          background-color: #333; }
          .product-view .product-info_media .more-images .owl-nav .owl-prev:hover:before, .product-view .product-info_media .more-images .owl-nav .owl-next:hover:before {
            color: #fff; }
      .product-view .product-info_media .more-images .owl-nav .owl-prev {
        left: -32px;
        background-position: -10px -10px; }
        .product-view .product-info_media .more-images .owl-nav .owl-prev:before {
          content: "\e260"; }
      .product-view .product-info_media .more-images .owl-nav .owl-next {
        right: -32px;
        background-position: -60px -10px; }
        .product-view .product-info_media .more-images .owl-nav .owl-next:before {
          content: "\e263"; }
  .product-view .product-info_media .MagicToolboxContainer .MagicToolboxSelectorsContainer a img {
    max-width: 63px;
    -webkit-box-shadow: none;
            box-shadow: none;
    -webkit-filter: brightness(100%) !important;
            filter: brightness(100%) !important; }
  .product-view .product-info_media .MagicToolboxContainer .MagicToolboxSelectorsContainer .mcs-bullets .mcs-bullet {
    background-color: #ccc; }
    .product-view .product-info_media .MagicToolboxContainer .MagicToolboxSelectorsContainer .mcs-bullets .mcs-bullet.active {
      background-color: #019DF4;
      border: 0; }
  .product-view .product-info_media .MagicToolboxContainer .MagicToolboxSelectorsContainer .mcs-button-arrow {
    border: 0 !important;
    background: none !important; }
  .product-view .product-info_media .MagicToolboxContainer .MagicToolboxSelectorsContainer .MagicScroll-bullets > div a[target="_blank"], .product-view .product-info_media .MagicToolboxContainer .MagicToolboxSelectorsContainer .MagicScroll-bullets > span a[target="_blank"] {
    display: none; }
  .product-view .product-info_main {
    text-align: left; }
    @media only screen and (max-width: 768px) {
      .product-view .product-info_main {
        margin-top: 30px; } }
    .product-view .product-info_main .product-name, .product-view .product-info_main .rating-summary, .product-view .product-info_main .stock-status, .product-view .product-info_main .product-attribute, .product-view .product-info_main .sku, .product-view .product-info_main .product-type-data {
      width: 100%;
      float: left; }
    .product-view .product-info_main .product-name {
      color: #000;
      font-size: 28px;
      font-weight: bold;
      margin: 0 0 10px;
      display: block; }
      @media only screen and (max-width: 650px) {
        .product-view .product-info_main .product-name {
          font-size: 28px; } }
    .product-view .product-info_main .stock-status {
      margin: 10px 0;
      line-height: normal; }
      .product-view .product-info_main .stock-status > span {
        font-weight: 500; }
        .product-view .product-info_main .stock-status > span.in-stock {
          color: #4fb62f; }
        .product-view .product-info_main .stock-status > span.out-stock {
          color: #D7410B; }
    .product-view .product-info_main .product-attribute {
      font-size: 23px;
      margin: 0; }
    .product-view .product-info_main .sku {
      margin: 10px 0;
      text-transform: uppercase; }
      .product-view .product-info_main .sku .label {
        margin-right: 7px; }
      .product-view .product-info_main .sku .label, .product-view .product-info_main .sku .value {
        color: #aaa;
        padding: 0;
        font-size: 16px;
        font-weight: 500;
        line-height: normal;
        float: left; }
    .product-view .product-info_main .product-type-data {
      margin: 10px 0 0; }
      .product-view .product-info_main .product-type-data p {
        margin: 0; }
      .product-view .product-info_main .product-type-data .old-price {
        color: #8e8e8e;
        font-size: 18px; }
        .product-view .product-info_main .product-type-data .old-price .price {
          font-size: 30px;
          text-decoration: line-through; }
      .product-view .product-info_main .product-type-data .special-price, .product-view .product-info_main .product-type-data .regular-price {
        font-size: 35px;
        line-height: normal; }
      .product-view .product-info_main .product-type-data .special-price .price {
        color: #c73615; }
      .product-view .product-info_main .product-type-data .regular-price .price {
        color: #000; }
      .product-view .product-info_main .product-type-data .old-price .price-label, .product-view .product-info_main .product-type-data .special-price .price-label, .product-view .product-info_main .product-type-data .regular-price .price-label {
        white-space: nowrap;
        display: none; }
      .product-view .product-info_main .product-type-data .old-price .price, .product-view .product-info_main .product-type-data .special-price .price, .product-view .product-info_main .product-type-data .regular-price .price {
        font-weight: bold;
        line-height: normal; }
    .product-view .product-info_main .price-box {
      width: 100%;
      float: left;
      line-height: normal;
      margin: 10px 0; }
      .product-view .product-info_main .price-box > span {
        display: inline-block;
        margin-right: 20px; }
        .product-view .product-info_main .price-box > span.special-price .price {
          color: #c73615; }
        .product-view .product-info_main .price-box > span.old-price {
          color: #8e8e8e; }
          .product-view .product-info_main .price-box > span.old-price .price {
            color: #999;
            font-size: 24px; }
      .product-view .product-info_main .price-box .price-label {
        display: none; }
      .product-view .product-info_main .price-box .price {
        font-size: 30px;
        font-weight: bold;
        color: #000; }
      .product-view .product-info_main .price-box .price-final_price .price {
        color: #313235; }
    .product-view .product-info_main .short-description {
      width: 100%;
      margin: 15px 0;
      color: #000;
      font-size: 12px;
      line-height: 20px;
      letter-spacing: .5px;
      float: left; }
      .product-view .product-info_main .short-description ul, .product-view .product-info_main .short-description ol {
        list-style: disc;
        list-style-position: inside; }
      .product-view .product-info_main .short-description li {
        margin-bottom: 0; }
    .product-view .product-info_main .product-add-form {
      width: 100%;
      float: left; }
      .product-view .product-info_main .product-add-form .box-tocart {
        margin: 0; }
        .product-view .product-info_main .product-add-form .box-tocart .field {
          display: block;
          padding: 0;
          margin: 0; }
          .product-view .product-info_main .product-add-form .box-tocart .field.qty {
            padding: 20px 0;
            border-bottom: 1px solid #e5e5e5; }
            @media only screen and (min-width: 768px) {
              .product-view .product-info_main .product-add-form .box-tocart .field.qty {
                display: block; } }
            @media only screen and (max-width: 540px) {
              .product-view .product-info_main .product-add-form .box-tocart .field.qty {
                border-top: 1px solid #e5e5e5; } }
            .product-view .product-info_main .product-add-form .box-tocart .field.qty .label, .product-view .product-info_main .product-add-form .box-tocart .field.qty .control {
              width: auto;
              display: inline-block; }
              @media only screen and (max-width: 768px) {
                .product-view .product-info_main .product-add-form .box-tocart .field.qty .label, .product-view .product-info_main .product-add-form .box-tocart .field.qty .control {
                  width: 50%; } }
            .product-view .product-info_main .product-add-form .box-tocart .field.qty .control {
              width: auto !important;
              margin: 10px 0 20px 40px;
              position: relative; }
              @media only screen and (max-width: 768px) {
                .product-view .product-info_main .product-add-form .box-tocart .field.qty .control {
                  margin: 0;
                  float: right; } }
              .product-view .product-info_main .product-add-form .box-tocart .field.qty .control input {
                width: 5em;
                height: 30px;
                color: #000;
                font-weight: bold;
                text-align: center;
                vertical-align: middle;
                background: none;
                border: none; }
              .product-view .product-info_main .product-add-form .box-tocart .field.qty .control .mage-error[generated] {
                position: absolute; }
            .product-view .product-info_main .product-add-form .box-tocart .field.qty .control-qty {
              width: 28px;
              height: 28px;
              color: #fff;
              background: #019DF4;
              vertical-align: middle;
              display: inline-block;
              border-radius: 50%;
              font-size: 18px;
              font-weight: bold;
              text-align: center;
              line-height: 28px;
              cursor: pointer; }
              .product-view .product-info_main .product-add-form .box-tocart .field.qty .control-qty:not(.disable):hover {
                color: #fff;
                background: #000; }
              .product-view .product-info_main .product-add-form .box-tocart .field.qty .control-qty.disable {
                color: #fff;
                background: #ccc;
                line-height: 25px;
                border: none;
                pointer-events: none; }
            .product-view .product-info_main .product-add-form .box-tocart .field.qty .control.qty {
              display: inline-block; }
          .product-view .product-info_main .product-add-form .box-tocart .field .label {
            font-size: 12px;
            line-height: 1.3;
            float: none;
            display: block;
            clear: both;
            border: 0;
            margin-bottom: 3px;
            color: #000; }
        .product-view .product-info_main .product-add-form .box-tocart .actions {
          width: 100%;
          float: left;
          margin-right: 10px;
          max-width: 100%;
          padding: 15px 0; }
          .product-view .product-info_main .product-add-form .box-tocart .actions button, .product-view .product-info_main .product-add-form .box-tocart .actions .action.towishlist {
            margin-bottom: 10px;
            vertical-align: middle;
            min-height: 40px;
            line-height: 40px;
            font-size: 17px;
            padding: 0 30px;
            float: left;
            min-width: 160px;
            width: auto;
            white-space: normal; }
            .product-view .product-info_main .product-add-form .box-tocart .actions button.primary, .product-view .product-info_main .product-add-form .box-tocart .actions .action.towishlist.primary {
              background: #019DF4; }
            .product-view .product-info_main .product-add-form .box-tocart .actions button:hover, .product-view .product-info_main .product-add-form .box-tocart .actions .action.towishlist:hover {
              color: #fff;
              background: #000; }
            @media only screen and (max-width: 540px) {
              .product-view .product-info_main .product-add-form .box-tocart .actions button, .product-view .product-info_main .product-add-form .box-tocart .actions .action.towishlist {
                width: 100%;
                margin-right: 0;
                text-align: center; } }
          .product-view .product-info_main .product-add-form .box-tocart .actions .action.towishlist {
            color: #999;
            height: 38px;
            border-radius: 3px; }
            .product-view .product-info_main .product-add-form .box-tocart .actions .action.towishlist:hover {
              background: transparent;
              color: #000000; }
    .product-view .product-info_main > .product-addto-links {
      display: none; }
    .product-view .product-info_main .ept-social-share {
      width: 100%;
      float: left; }
    .product-view .product-info_main .product-social-links {
      width: auto;
      display: inline-block;
      border-left: 1px solid #e5e5e5;
      padding-left: 15px;
      margin-left: 10px; }
    .product-view .product-info_main .ept-social-share.ept-product-page .ept-social-buttons, .product-view .product-info_main .ept-social-share.ept-socialshare-page .ept-social-buttons {
      vertical-align: middle;
      margin-right: 8px; }
      @media only screen and (min-width: 540px) {
        .product-view .product-info_main .ept-social-share.ept-product-page .ept-social-buttons, .product-view .product-info_main .ept-social-share.ept-socialshare-page .ept-social-buttons {
          width: 30px;
          height: 30px; } }
      @media only screen and (min-width: 540px) {
        .product-view .product-info_main .ept-social-share.ept-product-page .ept-social-buttons a, .product-view .product-info_main .ept-social-share.ept-socialshare-page .ept-social-buttons a {
          width: 100%;
          height: 100%;
          line-height: 30px;
          float: left; } }
    .product-view .product-info_main .ept-social-share.ept-product-page .facebook-share, .product-view .product-info_main .ept-social-share.ept-socialshare-page .facebook-share {
      background: #3b5998; }
      .product-view .product-info_main .ept-social-share.ept-product-page .facebook-share .facebook-button, .product-view .product-info_main .ept-social-share.ept-socialshare-page .facebook-share .facebook-button {
        color: #fff; }
    .product-view .product-info_main .ept-social-share.ept-product-page .whatsapp-button:before, .product-view .product-info_main .ept-social-share.ept-socialshare-page .whatsapp-button:before {
      font-size: 34px; }
      @media only screen and (max-width: 540px) {
        .product-view .product-info_main .ept-social-share.ept-product-page .whatsapp-button:before, .product-view .product-info_main .ept-social-share.ept-socialshare-page .whatsapp-button:before {
          font-size: 40px; } }

.product-characteristics h2 {
  color: #000;
  font-weight: bold;
  font-size: 36px;
  text-transform: uppercase;
  text-align: center;
  width: 100%;
  margin: 20px 0 0; }
  @media only screen and (max-width: 768px) {
    .product-characteristics h2 {
      font-size: 32px; } }
  @media only screen and (max-width: 650px) {
    .product-characteristics h2 {
      font-size: 28px; } }

.product-characteristics ul.feature-icons {
  width: 100%;
  text-align: center;
  padding-top: 7%; }
  .product-characteristics ul.feature-icons li {
    float: none;
    display: inline-block;
    vertical-align: top;
    margin: 0 auto;
    padding: 5px 0;
    width: 14%; }
    @media only screen and (max-width: 650px) {
      .product-characteristics ul.feature-icons li {
        width: 25%; } }
    .product-characteristics ul.feature-icons li h5 {
      color: black;
      line-height: 1.15em;
      font-size: 22px;
      font-weight: normal;
      text-transform: uppercase;
      margin-top: 40px; }
      @media only screen and (max-width: 768px) {
        .product-characteristics ul.feature-icons li h5 {
          font-size: 18px; } }

.box-additional {
  padding: 60px 0;
  background: #F9F9F9; }
  .box-additional .product-tabs {
    width: 100%;
    float: left; }
    @media only screen and (max-width: 768px) {
      .box-additional .product-tabs .product.data.items {
        text-align: left; } }
    .box-additional .product-tabs .product.data.items > .item.title {
      float: left;
      margin: 0 0 -1px;
      font-size: 18px; }
      @media only screen and (max-width: 768px) {
        .box-additional .product-tabs .product.data.items > .item.title {
          margin: 0;
          border-top: 1px solid #d5d5d5; } }
      .box-additional .product-tabs .product.data.items > .item.title > .switch {
        color: #019DF4;
        font-size: 1em;
        line-height: 3em;
        background-color: #e5e4e4;
        font-weight: bold;
        height: auto;
        padding: 0 15px;
        border: 1px solid transparent; }
        @media only screen and (min-width: 768px) {
          .box-additional .product-tabs .product.data.items > .item.title > .switch {
            color: #019DF4;
            position: relative; }
            .box-additional .product-tabs .product.data.items > .item.title > .switch:visited {
              color: #019DF4; } }
        @media only screen and (min-width: 768px) {
          .box-additional .product-tabs .product.data.items > .item.title > .switch:hover {
            background: #eee; } }
      .box-additional .product-tabs .product.data.items > .item.title.active > .switch {
        color: #019DF4;
        margin-bottom: -1px;
        background-color: #fff;
        border-bottom: 3px solid #019DF4;
        padding-bottom: 0; }
        .box-additional .product-tabs .product.data.items > .item.title.active > .switch:hover {
          background-color: #fff; }
      .box-additional .product-tabs .product.data.items > .item.title:hover > .switch {
        background-color: #fff; }
        @media only screen and (max-width: 768px) {
          .box-additional .product-tabs .product.data.items > .item.title:hover > .switch {
            background-color: #eee; } }
    .box-additional .product-tabs .product.data.items > .item.content {
      color: #666666;
      font-weight: 500;
      text-align: left;
      margin-top: 56px;
      margin-bottom: 0;
      padding: 20px;
      border: 0; }
      @media only screen and (max-width: 540px) {
        .box-additional .product-tabs .product.data.items > .item.content {
          width: 100%;
          margin-top: 0;
          float: left; } }
    .box-additional .product-tabs .tab-content .tab-pane {
      padding: 15px 0;
      border-bottom: 1px dashed #e5e5e5;
      text-align: left; }
      @media only screen and (max-width: 1024px) {
        .box-additional .product-tabs .tab-content .tab-pane {
          display: block;
          opacity: 1;
          border: 0;
          padding: 0 !important; }
          .box-additional .product-tabs .tab-content .tab-pane .content {
            display: none; }
          .box-additional .product-tabs .tab-content .tab-pane.active .card-title {
            color: #009b67; }
            .box-additional .product-tabs .tab-content .tab-pane.active .card-title:after {
              content: "\e262"; }
          .box-additional .product-tabs .tab-content .tab-pane.active .content {
            display: block; } }
      .box-additional .product-tabs .tab-content .tab-pane .card-title {
        display: none; }
        @media only screen and (max-width: 1024px) {
          .box-additional .product-tabs .tab-content .tab-pane .card-title {
            display: block;
            color: #333;
            font-size: 1.5em;
            line-height: 2.7em;
            font-weight: normal;
            font-weight: bold;
            border-bottom: 1px solid #e5e5e5;
            background-color: #f5f5f5;
            margin-bottom: 1px;
            padding: 0 .5em; }
            .box-additional .product-tabs .tab-content .tab-pane .card-title:after {
              content: "\e261";
              float: right;
              font-size: 22px;
              font-style: normal;
              font-weight: normal;
              font-variant: normal;
              text-transform: none;
              font-family: ThemeIcons;
              -webkit-font-smoothing: antialiased;
              display: inline-block; } }
      .box-additional .product-tabs .tab-content .tab-pane p {
        margin: 0; }
      @media only screen and (max-width: 1024px) {
        .box-additional .product-tabs .tab-content .tab-pane .content {
          margin: 10px 0;
          padding: 15px; } }
      @media only screen and (max-width: 480px) {
        .box-additional .product-tabs .tab-content .tab-pane .content.table {
          padding: 15px 0; } }
    .box-additional .product-tabs .additional-attributes-wrapper.table-wrapper table {
      width: 100%;
      border-collapse: collapse;
      border-spacing: 0;
      empty-cells: show;
      font-size: 100%;
      border: 0; }
      @media only screen and (min-width: 768px) {
        .box-additional .product-tabs .additional-attributes-wrapper.table-wrapper table {
          width: 100%; } }
      .box-additional .product-tabs .additional-attributes-wrapper.table-wrapper table tbody tr:nth-child(even) {
        background-color: #fbfbfb; }
      .box-additional .product-tabs .additional-attributes-wrapper.table-wrapper table tbody th, .box-additional .product-tabs .additional-attributes-wrapper.table-wrapper table tbody td {
        padding: 20px; }
      .box-additional .product-tabs .additional-attributes-wrapper.table-wrapper table tbody th {
        font-weight: bold;
        border-right: 1px solid #f5f5f5; }
      .box-additional .product-tabs .additional-attributes-wrapper.table-wrapper table tbody .label {
        width: 25%;
        color: #000;
        font-size: 100%;
        display: table-cell; }

section.newsletter .header-section {
  text-align: center; }
  section.newsletter .header-section .title-section {
    color: #000;
    font-size: 22px;
    text-transform: uppercase; }
  @media only screen and (max-width: 540px) {
    section.newsletter .header-section {
      padding: 0 15px; } }

section.newsletter .block.newsletter {
  width: 100%;
  max-width: 560px;
  margin: 20px auto 0; }
  @media only screen and (max-width: 540px) {
    section.newsletter .block.newsletter {
      padding: 0 15px; } }
  @media only screen and (max-width: 540px) {
    section.newsletter .block.newsletter form {
      text-align: center;
      display: inline-block; } }
  section.newsletter .block.newsletter form .field.newsletter {
    width: 75%;
    float: left;
    margin: 0; }
    @media only screen and (max-width: 540px) {
      section.newsletter .block.newsletter form .field.newsletter {
        width: 100%; } }
    section.newsletter .block.newsletter form .field.newsletter .control label {
      width: 100%; }
    section.newsletter .block.newsletter form .field.newsletter .control:before {
      line-height: 46px; }
    section.newsletter .block.newsletter form .field.newsletter input {
      height: 46px;
      border-radius: 5px 0 0 5px; }
      @media only screen and (max-width: 540px) {
        section.newsletter .block.newsletter form .field.newsletter input {
          border-radius: 5px; } }
  section.newsletter .block.newsletter form .actions {
    width: 25%;
    display: inline-block; }
    @media only screen and (max-width: 540px) {
      section.newsletter .block.newsletter form .actions {
        width: 100%;
        max-width: 200px;
        margin-top: 20px; } }
    section.newsletter .block.newsletter form .actions .action {
      width: 100%;
      height: 46px;
      position: relative;
      text-transform: uppercase;
      border-radius: 0 5px 5px 0;
      background: #019DF4; }
      @media only screen and (max-width: 540px) {
        section.newsletter .block.newsletter form .actions .action {
          border-radius: 5px; } }

section.newsletter.bg-image-dark .header-section .title-section, section.newsletter.bg-image-dark .header-section p {
  color: #fff; }

header .block-search {
  top: 70%;
  width: 100%;
  display: block;
  position: absolute;
  padding: 20px 0;
  -webkit-transition: visibility 0s, opacity 0.3s linear;
  -o-transition: visibility 0s, opacity 0.3s linear;
  transition: visibility 0s, opacity 0.3s linear;
  background: #f9f9f9;
  visibility: hidden;
  opacity: 0; }
  @media only screen and (max-width: 540px) {
    header .block-search {
      margin-top: 0; } }
  header .block-search.open {
    top: 100%;
    visibility: visible;
    opacity: 1; }
  header .block-search .control {
    border-top: 0;
    margin: 0;
    padding: 0 0 25px; }

header .block-content {
  max-width: 1140px;
  margin: 0 auto;
  padding: 0 15px; }
  header .block-content form {
    position: relative; }
    header .block-content form label {
      right: 0;
      top: 12px;
      position: absolute; }
    header .block-content form .control input[type="text"] {
      height: 60px;
      font-size: 16px;
      padding: 15px 35px 15px 15px;
      margin: 0;
      position: static; }
    header .block-content form .control .nested {
      display: block;
      padding-top: 5px;
      position: absolute; }
      header .block-content form .control .nested a {
        color: #019DF4;
        font-size: 13px; }
        header .block-content form .control .nested a:hover {
          text-decoration: underline; }
    header .block-content form .action.search {
      top: 12px; }
      header .block-content form .action.search:before {
        font-size: 30px;
        line-height: 30px; }

.breadcrumbs {
  margin: 0;
  padding: 10px 0; }
  @media only screen and (max-width: 768px) {
    .breadcrumbs {
      display: none; } }
  .breadcrumbs .items {
    max-width: 1140px;
    text-align: left;
    padding: 0 15px;
    margin: 0 auto; }
    .breadcrumbs .items li {
      font-size: 15px; }
    .breadcrumbs .items a {
      color: #019DF4; }
    .breadcrumbs .items .item:not(:last-child):after {
      line-height: 24px; }

form {
  text-align: left; }
  @media only screen and (min-width: 768px) {
    form.password.reset, form.send.confirmation, form.password.forget, form.create.account, form.search.advanced, form.form-orders-search, form.send.friend {
      width: 100% !important;
      min-width: inherit !important; } }
  form.review-form {
    width: 100%; }
  form.contact {
    margin: 0 auto;
    max-width: 500px;
    min-width: 300px; }
    @media only screen and (max-width: 768px) {
      form.contact {
        width: 90% !important; } }
  form .label {
    color: #000; }
  form .fieldset > .field[name="shippingAddress.postcode"] {
    display: none; }
  form .fieldset > .field:not(.choice) > .label {
    color: #313235;
    font-size: 13px;
    margin: 0 0 10px;
    font-weight: 700;
    word-break: break-all;
    text-align: left;
    padding: 0; }
    @media only screen and (min-width: 768px) {
      form .fieldset > .field:not(.choice) > .label {
        width: 100%; } }
    form .fieldset > .field:not(.choice) > .label span {
      text-align: left;
      white-space: normal;
      word-break: break-word; }
  form .fieldset > .field:not(.choice) > .control {
    width: 100% !important; }
    form .fieldset > .field:not(.choice) > .control._with-tooltip input {
      width: 100%;
      margin-right: 0; }
    form .fieldset > .field:not(.choice) > .control._with-tooltip .field-tooltip {
      right: -30px; }
      @media only screen and (max-width: 768px) {
        form .fieldset > .field:not(.choice) > .control._with-tooltip .field-tooltip {
          right: 0;
          top: -35px; } }
  form .fieldset > .field.choice:before {
    display: none; }
  form .fieldset > .field.choice input[type=checkbox] {
    top: 4px;
    width: 18px;
    height: 18px;
    display: inline-block;
    margin: 0; }
  form .fieldset > .field.choice label {
    color: #000;
    font-size: 13px;
    display: inline-block; }
  form .fieldset > .legend {
    font-size: 20px;
    text-align: left;
    border: 0;
    text-transform: uppercase;
    font-family: "Telefonica-Regular"; }
    @media only screen and (min-width: 768px) {
      form .fieldset > .legend {
        margin-left: 0; } }
    form .fieldset > .legend.review-legend {
      border: 0; }
  form .actions-toolbar {
    margin: 0 !important;
    float: left; }
    form .actions-toolbar .secondary {
      width: 100%;
      margin-bottom: 25px; }
      @media only screen and (min-width: 768px) {
        form .actions-toolbar .secondary {
          float: left;
          text-align: left; } }
      form .actions-toolbar .secondary .action.remind {
        margin: 0; }
  form .field-error, form div.mage-error[generated] {
    font-size: 12px; }

@media only screen and (min-width: 768px) {
  .login-container form .fieldset:after {
    margin-left: 0; } }

.customer-account-forgotpassword .form.password.forget, .customer-account-forgotpassword .form.send.confirmation, .customer-account-forgotpassword .form.create.account .form.password.reset, .customer-account-forgotpassword .send.friend, .customer-account-confirmation .form.password.forget, .customer-account-confirmation .form.send.confirmation, .customer-account-confirmation .form.create.account .form.password.reset, .customer-account-confirmation .send.friend, .customer-account-create .form.password.forget, .customer-account-create .form.send.confirmation, .customer-account-create .form.create.account .form.password.reset, .customer-account-create .send.friend, .customer-account-createpassword .form.password.forget, .customer-account-createpassword .form.send.confirmation, .customer-account-createpassword .form.create.account .form.password.reset, .customer-account-createpassword .send.friend, .sendfriend-product-send .form.password.forget, .sendfriend-product-send .form.send.confirmation, .sendfriend-product-send .form.create.account .form.password.reset, .sendfriend-product-send .send.friend {
  text-align: left; }
  @media only screen and (min-width: 768px) {
    .customer-account-forgotpassword .form.password.forget, .customer-account-forgotpassword .form.send.confirmation, .customer-account-forgotpassword .form.create.account .form.password.reset, .customer-account-forgotpassword .send.friend, .customer-account-confirmation .form.password.forget, .customer-account-confirmation .form.send.confirmation, .customer-account-confirmation .form.create.account .form.password.reset, .customer-account-confirmation .send.friend, .customer-account-create .form.password.forget, .customer-account-create .form.send.confirmation, .customer-account-create .form.create.account .form.password.reset, .customer-account-create .send.friend, .customer-account-createpassword .form.password.forget, .customer-account-createpassword .form.send.confirmation, .customer-account-createpassword .form.create.account .form.password.reset, .customer-account-createpassword .send.friend, .sendfriend-product-send .form.password.forget, .sendfriend-product-send .form.send.confirmation, .sendfriend-product-send .form.create.account .form.password.reset, .sendfriend-product-send .send.friend {
      width: 100%;
      min-width: 100%; }
      .customer-account-forgotpassword .form.password.forget .fieldset > .field:not(.choice) > .control, .customer-account-forgotpassword .form.send.confirmation .fieldset > .field:not(.choice) > .control, .customer-account-forgotpassword .form.create.account .form.password.reset .fieldset > .field:not(.choice) > .control, .customer-account-forgotpassword .send.friend .fieldset > .field:not(.choice) > .control, .customer-account-confirmation .form.password.forget .fieldset > .field:not(.choice) > .control, .customer-account-confirmation .form.send.confirmation .fieldset > .field:not(.choice) > .control, .customer-account-confirmation .form.create.account .form.password.reset .fieldset > .field:not(.choice) > .control, .customer-account-confirmation .send.friend .fieldset > .field:not(.choice) > .control, .customer-account-create .form.password.forget .fieldset > .field:not(.choice) > .control, .customer-account-create .form.send.confirmation .fieldset > .field:not(.choice) > .control, .customer-account-create .form.create.account .form.password.reset .fieldset > .field:not(.choice) > .control, .customer-account-create .send.friend .fieldset > .field:not(.choice) > .control, .customer-account-createpassword .form.password.forget .fieldset > .field:not(.choice) > .control, .customer-account-createpassword .form.send.confirmation .fieldset > .field:not(.choice) > .control, .customer-account-createpassword .form.create.account .form.password.reset .fieldset > .field:not(.choice) > .control, .customer-account-createpassword .send.friend .fieldset > .field:not(.choice) > .control, .sendfriend-product-send .form.password.forget .fieldset > .field:not(.choice) > .control, .sendfriend-product-send .form.send.confirmation .fieldset > .field:not(.choice) > .control, .sendfriend-product-send .form.create.account .form.password.reset .fieldset > .field:not(.choice) > .control, .sendfriend-product-send .send.friend .fieldset > .field:not(.choice) > .control {
        width: 100%; } }
  .customer-account-forgotpassword .form.password.forget .field.captcha, .customer-account-forgotpassword .form.send.confirmation .field.captcha, .customer-account-forgotpassword .form.create.account .form.password.reset .field.captcha, .customer-account-forgotpassword .send.friend .field.captcha, .customer-account-confirmation .form.password.forget .field.captcha, .customer-account-confirmation .form.send.confirmation .field.captcha, .customer-account-confirmation .form.create.account .form.password.reset .field.captcha, .customer-account-confirmation .send.friend .field.captcha, .customer-account-create .form.password.forget .field.captcha, .customer-account-create .form.send.confirmation .field.captcha, .customer-account-create .form.create.account .form.password.reset .field.captcha, .customer-account-create .send.friend .field.captcha, .customer-account-createpassword .form.password.forget .field.captcha, .customer-account-createpassword .form.send.confirmation .field.captcha, .customer-account-createpassword .form.create.account .form.password.reset .field.captcha, .customer-account-createpassword .send.friend .field.captcha, .sendfriend-product-send .form.password.forget .field.captcha, .sendfriend-product-send .form.send.confirmation .field.captcha, .sendfriend-product-send .form.create.account .form.password.reset .field.captcha, .sendfriend-product-send .send.friend .field.captcha {
    text-align: center; }
  .customer-account-forgotpassword .form.password.forget .actions-toolbar, .customer-account-forgotpassword .form.send.confirmation .actions-toolbar, .customer-account-forgotpassword .form.create.account .form.password.reset .actions-toolbar, .customer-account-forgotpassword .send.friend .actions-toolbar, .customer-account-confirmation .form.password.forget .actions-toolbar, .customer-account-confirmation .form.send.confirmation .actions-toolbar, .customer-account-confirmation .form.create.account .form.password.reset .actions-toolbar, .customer-account-confirmation .send.friend .actions-toolbar, .customer-account-create .form.password.forget .actions-toolbar, .customer-account-create .form.send.confirmation .actions-toolbar, .customer-account-create .form.create.account .form.password.reset .actions-toolbar, .customer-account-create .send.friend .actions-toolbar, .customer-account-createpassword .form.password.forget .actions-toolbar, .customer-account-createpassword .form.send.confirmation .actions-toolbar, .customer-account-createpassword .form.create.account .form.password.reset .actions-toolbar, .customer-account-createpassword .send.friend .actions-toolbar, .sendfriend-product-send .form.password.forget .actions-toolbar, .sendfriend-product-send .form.send.confirmation .actions-toolbar, .sendfriend-product-send .form.create.account .form.password.reset .actions-toolbar, .sendfriend-product-send .send.friend .actions-toolbar {
    text-align: center; }
    @media only screen and (min-width: 768px) {
      .customer-account-forgotpassword .form.password.forget .actions-toolbar .primary, .customer-account-forgotpassword .form.send.confirmation .actions-toolbar .primary, .customer-account-forgotpassword .form.create.account .form.password.reset .actions-toolbar .primary, .customer-account-forgotpassword .send.friend .actions-toolbar .primary, .customer-account-confirmation .form.password.forget .actions-toolbar .primary, .customer-account-confirmation .form.send.confirmation .actions-toolbar .primary, .customer-account-confirmation .form.create.account .form.password.reset .actions-toolbar .primary, .customer-account-confirmation .send.friend .actions-toolbar .primary, .customer-account-create .form.password.forget .actions-toolbar .primary, .customer-account-create .form.send.confirmation .actions-toolbar .primary, .customer-account-create .form.create.account .form.password.reset .actions-toolbar .primary, .customer-account-create .send.friend .actions-toolbar .primary, .customer-account-createpassword .form.password.forget .actions-toolbar .primary, .customer-account-createpassword .form.send.confirmation .actions-toolbar .primary, .customer-account-createpassword .form.create.account .form.password.reset .actions-toolbar .primary, .customer-account-createpassword .send.friend .actions-toolbar .primary, .sendfriend-product-send .form.password.forget .actions-toolbar .primary, .sendfriend-product-send .form.send.confirmation .actions-toolbar .primary, .sendfriend-product-send .form.create.account .form.password.reset .actions-toolbar .primary, .sendfriend-product-send .send.friend .actions-toolbar .primary {
        float: none; } }
    .customer-account-forgotpassword .form.password.forget .actions-toolbar .secondary, .customer-account-forgotpassword .form.send.confirmation .actions-toolbar .secondary, .customer-account-forgotpassword .form.create.account .form.password.reset .actions-toolbar .secondary, .customer-account-forgotpassword .send.friend .actions-toolbar .secondary, .customer-account-confirmation .form.password.forget .actions-toolbar .secondary, .customer-account-confirmation .form.send.confirmation .actions-toolbar .secondary, .customer-account-confirmation .form.create.account .form.password.reset .actions-toolbar .secondary, .customer-account-confirmation .send.friend .actions-toolbar .secondary, .customer-account-create .form.password.forget .actions-toolbar .secondary, .customer-account-create .form.send.confirmation .actions-toolbar .secondary, .customer-account-create .form.create.account .form.password.reset .actions-toolbar .secondary, .customer-account-create .send.friend .actions-toolbar .secondary, .customer-account-createpassword .form.password.forget .actions-toolbar .secondary, .customer-account-createpassword .form.send.confirmation .actions-toolbar .secondary, .customer-account-createpassword .form.create.account .form.password.reset .actions-toolbar .secondary, .customer-account-createpassword .send.friend .actions-toolbar .secondary, .sendfriend-product-send .form.password.forget .actions-toolbar .secondary, .sendfriend-product-send .form.send.confirmation .actions-toolbar .secondary, .sendfriend-product-send .form.create.account .form.password.reset .actions-toolbar .secondary, .sendfriend-product-send .send.friend .actions-toolbar .secondary {
      text-align: center; }
      .customer-account-forgotpassword .form.password.forget .actions-toolbar .secondary .add, .customer-account-forgotpassword .form.send.confirmation .actions-toolbar .secondary .add, .customer-account-forgotpassword .form.create.account .form.password.reset .actions-toolbar .secondary .add, .customer-account-forgotpassword .send.friend .actions-toolbar .secondary .add, .customer-account-confirmation .form.password.forget .actions-toolbar .secondary .add, .customer-account-confirmation .form.send.confirmation .actions-toolbar .secondary .add, .customer-account-confirmation .form.create.account .form.password.reset .actions-toolbar .secondary .add, .customer-account-confirmation .send.friend .actions-toolbar .secondary .add, .customer-account-create .form.password.forget .actions-toolbar .secondary .add, .customer-account-create .form.send.confirmation .actions-toolbar .secondary .add, .customer-account-create .form.create.account .form.password.reset .actions-toolbar .secondary .add, .customer-account-create .send.friend .actions-toolbar .secondary .add, .customer-account-createpassword .form.password.forget .actions-toolbar .secondary .add, .customer-account-createpassword .form.send.confirmation .actions-toolbar .secondary .add, .customer-account-createpassword .form.create.account .form.password.reset .actions-toolbar .secondary .add, .customer-account-createpassword .send.friend .actions-toolbar .secondary .add, .sendfriend-product-send .form.password.forget .actions-toolbar .secondary .add, .sendfriend-product-send .form.send.confirmation .actions-toolbar .secondary .add, .sendfriend-product-send .form.create.account .form.password.reset .actions-toolbar .secondary .add, .sendfriend-product-send .send.friend .actions-toolbar .secondary .add {
        color: #999;
        background: none;
        border: 1px solid #ccc;
        padding: 7px 15px;
        height: 44px;
        font-size: 16px;
        line-height: 30px;
        font-weight: normal; }
        .customer-account-forgotpassword .form.password.forget .actions-toolbar .secondary .add:hover, .customer-account-forgotpassword .form.send.confirmation .actions-toolbar .secondary .add:hover, .customer-account-forgotpassword .form.create.account .form.password.reset .actions-toolbar .secondary .add:hover, .customer-account-forgotpassword .send.friend .actions-toolbar .secondary .add:hover, .customer-account-confirmation .form.password.forget .actions-toolbar .secondary .add:hover, .customer-account-confirmation .form.send.confirmation .actions-toolbar .secondary .add:hover, .customer-account-confirmation .form.create.account .form.password.reset .actions-toolbar .secondary .add:hover, .customer-account-confirmation .send.friend .actions-toolbar .secondary .add:hover, .customer-account-create .form.password.forget .actions-toolbar .secondary .add:hover, .customer-account-create .form.send.confirmation .actions-toolbar .secondary .add:hover, .customer-account-create .form.create.account .form.password.reset .actions-toolbar .secondary .add:hover, .customer-account-create .send.friend .actions-toolbar .secondary .add:hover, .customer-account-createpassword .form.password.forget .actions-toolbar .secondary .add:hover, .customer-account-createpassword .form.send.confirmation .actions-toolbar .secondary .add:hover, .customer-account-createpassword .form.create.account .form.password.reset .actions-toolbar .secondary .add:hover, .customer-account-createpassword .send.friend .actions-toolbar .secondary .add:hover, .sendfriend-product-send .form.password.forget .actions-toolbar .secondary .add:hover, .sendfriend-product-send .form.send.confirmation .actions-toolbar .secondary .add:hover, .sendfriend-product-send .form.create.account .form.password.reset .actions-toolbar .secondary .add:hover, .sendfriend-product-send .send.friend .actions-toolbar .secondary .add:hover {
          color: #fff;
          background: #000; }

.account .column.main .form {
  text-align: left; }

.account .box-upload {
  margin: 20px 0;
  padding: 20px;
  background: #e8e8e8;
  width: 100%; }

.control.captcha-image .captcha-img {
  width: auto; }

.review-form {
  float: left; }
  .review-form .actions-toolbar .primary .action {
    color: #fff;
    background: #019DF4;
    border: none;
    min-width: 180px;
    margin: 0;
    padding: 0 25px;
    line-height: 45px;
    text-transform: uppercase;
    -webkit-transition: .3s all ease;
    -o-transition: .3s all ease;
    transition: .3s all ease;
    overflow: visible;
    cursor: pointer;
    float: right; }
    .review-form .actions-toolbar .primary .action:hover {
      color: #fff;
      background: #000; }

.action.back {
  color: #1428A0;
  font-size: 18px; }
  .action.back:hover {
    color: #313235; }

.newsletter .span {
  font-size: 14px; }

.login-container {
  text-align: left; }
  .login-container .block .block-title {
    color: #019DF4;
    text-transform: uppercase;
    font-family: "Telefonica-Regular";
    font-size: 24px; }
  .login-container .fieldset:after {
    width: 100%;
    font-size: 12px;
    float: left; }
  .login-container .form .fieldset > .field {
    padding-left: 0;
    margin-bottom: 30px; }
    @media only screen and (max-width: 768px) {
      .login-container .form .fieldset > .field {
        width: 100%;
        float: left; } }
    .login-container .form .fieldset > .field:not(.choice) > .label {
      max-width: 100%;
      text-align: left; }
      @media only screen and (max-width: 768px) {
        .login-container .form .fieldset > .field:not(.choice) > .label {
          width: 100%;
          float: left; } }
    .login-container .form .fieldset > .field:not(.choice) .control {
      max-width: 80%; }
      @media only screen and (max-width: 768px) {
        .login-container .form .fieldset > .field:not(.choice) .control {
          width: 100%;
          max-width: 100%; } }
  .login-container .form .actions-toolbar {
    width: 100%;
    max-width: 100%;
    margin-left: 0 !important;
    float: left; }
    .login-container .form .actions-toolbar .primary {
      float: left; }

.actions-toolbar {
  width: 100%; }

.account .page-title-wrapper {
  margin: 40px 0 60px; }
  .account .page-title-wrapper .page-title {
    margin: 0; }
  .account .page-title-wrapper .order-status, .account .page-title-wrapper .order-date {
    width: 100%;
    float: left;
    line-height: normal;
    margin: 0 0 10px; }
  .account .page-title-wrapper .order-date .label {
    color: #000; }
  .account .page-title-wrapper .order-actions-toolbar {
    width: 100%;
    padding: 0 15px;
    line-height: normal;
    float: left; }
    .account .page-title-wrapper .order-actions-toolbar a {
      display: inline-block;
      margin: 0 20px;
      float: none; }

.account .column.main form, .account .column.main .block:not(.widget), .account .column.main .table-wrapper {
  text-align: left;
  border: 1px solid #e8e8e8;
  padding: 40px; }
  .account .column.main form.additional-addresses, .account .column.main .block:not(.widget).additional-addresses, .account .column.main .table-wrapper.additional-addresses {
    overflow-x: overlay;
    padding: 40px 0 0;
    border: 0; }
  .account .column.main form .mark, .account .column.main form mark, .account .column.main .block:not(.widget) .mark, .account .column.main .block:not(.widget) mark, .account .column.main .table-wrapper .mark, .account .column.main .table-wrapper mark {
    background: none; }

.account .column.main .block:not(.widget) .block-title {
  color: #019DF4;
  border-bottom: 1px solid #e8e8e8;
  padding-bottom: 12px; }
  .account .column.main .block:not(.widget) .block-title > strong {
    font-weight: 400; }

.account .column.main .block:not(.widget) .block-content .box-title {
  color: #000; }

.account .column.main .block:not(.widget) .action {
  margin-right: 20px; }
  .account .column.main .block:not(.widget) .action:not(.primary) {
    text-decoration: underline; }

.account .column.main .block:last-child {
  margin-bottom: 40px; }

.account .column.main form {
  margin-top: 0; }
  .account .column.main form .fieldset > .field {
    margin: 0 0 15px; }
    .account .column.main form .fieldset > .field:last-child {
      margin: 0; }
    .account .column.main form .fieldset > .field:not(.choice) {
      margin: 0 0 29px; }
      .account .column.main form .fieldset > .field:not(.choice) > .label {
        max-width: 100%;
        padding: 0; }
      @media only screen and (min-width: 768px) {
        .account .column.main form .fieldset > .field:not(.choice) .control {
          width: 74.2%;
          max-width: inherit; } }
    .account .column.main form .fieldset > .field.region .control select option {
      display: none; }
      .account .column.main form .fieldset > .field.region .control select option[parentid] {
        display: block; }
    .account .column.main form .fieldset > .field.city .control input {
      visibility: hidden; }
  .account .column.main form .fieldset > .legend {
    width: 100%;
    border-bottom: 1px solid #e8e8e8;
    font-weight: bold;
    font-size: 20px;
    padding-bottom: 12px;
    float: none; }

.account .column.main .actions-toolbar {
  margin: 0;
  float: none; }
  .account .column.main .actions-toolbar .primary:not(div) {
    min-width: 120px;
    font-size: 16px; }
    @media only screen and (min-width: 768px) {
      .account .column.main .actions-toolbar .primary:not(div) {
        float: left; } }
  .account .column.main .actions-toolbar .secondary {
    width: 100%;
    float: left;
    text-align: left; }
    @media only screen and (min-width: 768px) {
      .account .column.main .actions-toolbar .secondary a.action {
        margin-top: 20px; } }

.account-nav {
  text-align: left; }
  .account-nav .item:nth-child(5) {
    display: none; }
  .account-nav .item.current a, .account-nav .item.current strong {
    color: #019DF4;
    border-color: #019DF4; }
  .account-nav .item a, .account-nav .item strong {
    color: #000; }
    .account-nav .item a:hover, .account-nav .item strong:hover {
      color: #019DF4; }

.sidebar.sidebar-additional {
  text-align: left; }
  .sidebar.sidebar-additional .block-title strong {
    font-family: "Telefonica-Bold";
    font-size: 20px; }
  .sidebar.sidebar-additional .actions-toolbar {
    text-align: left; }
  .sidebar.sidebar-additional .actions-toolbar {
    margin: 0;
    width: 100%;
    max-width: 100%; }
    .sidebar.sidebar-additional .actions-toolbar > div {
      text-align: left;
      float: left; }

@media only screen and (max-width: 768px) {
  .minicart-wrapper {
    width: 100%;
    margin: 0 0 0 13px;
    text-align: center; } }

.minicart-wrapper .block-minicart {
  max-height: 600px;
  padding: 25px 20px 15px;
  overflow: overlay; }
  .minicart-wrapper .block-minicart .block-content .items-total {
    line-height: normal; }
  .minicart-wrapper .block-minicart .block-content label, .minicart-wrapper .block-minicart .block-content .label {
    color: #000; }
  .minicart-wrapper .block-minicart .block-content .actions .primary .action {
    margin-left: 5px;
    min-width: 140px;
    border-radius: 5px;
    background: #019DF4;
    display: inline-block;
    padding: 15px;
    border: 0;
    color: #FFFFFF;
    font-size: 13px;
    font-weight: bold;
    line-height: 19px;
    text-align: center;
    text-transform: uppercase;
    vertical-align: middle;
    white-space: nowrap; }
    .minicart-wrapper .block-minicart .block-content .actions .primary .action:hover {
      background: #000; }
  .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper {
    border-top: 0;
    margin-bottom: 20px; }
    .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item {
      text-align: left; }
      .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product-item-name a {
        color: #019DF4;
        font-size: 16px;
        font-weight: bold;
        line-height: initial; }
      .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product.options {
        width: 100%;
        float: left; }
        .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product.options span[role='tab'] {
          line-height: normal; }
        .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product.options.list {
          margin-bottom: 0;
          line-height: normal; }
          .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product.options.list .label {
            padding: 0; }
      .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product-item-pricing .price {
        color: #313235; }
      .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .details-qty.qty {
        pointer-events: none; }
        .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .details-qty.qty label {
          padding-left: 0; }
        .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .details-qty.qty input {
          border: 0;
          padding: 0; }
      .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product.actions .primary {
        display: none; }
      .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product.actions .action.delete {
        background: #999;
        border-radius: 50%; }
        .minicart-wrapper .block-minicart .block-content .minicart-items-wrapper .minicart-items .item .product.actions .action.delete:before {
          color: #fff;
          font-size: 32px;
          line-height: 32px;
          float: left; }
  .minicart-wrapper .block-minicart .block-content .actions {
    line-height: normal;
    color: #999; }
  .minicart-wrapper .block-minicart .subtotal {
    line-height: 40px; }

@media only screen and (max-width: 768px) {
  .minicart-wrapper .action.showcart {
    width: 100%;
    height: 50px;
    line-height: 50px;
    text-align: center;
    background: #ecebe8;
    position: relative;
    cursor: pointer;
    float: left; } }

@media only screen and (max-width: 768px) {
  .minicart-wrapper .action.showcart:before {
    color: #333;
    font-size: 28px;
    line-height: 50px; } }

.checkout-cart-index .page-wrapper .page-main {
  max-width: 1300px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .checkout-cart-index .page-wrapper .page-main {
      width: 90%; }
      .checkout-cart-index .page-wrapper .page-main .page-title-wrapper {
        text-align: left; } }

.checkout-cart-index .row.custom_alert {
  color: #000 !important;
  padding: .5rem .5rem .5rem .5rem;
  border-radius: .7rem;
  border: 1px solid #019DF4 !important;
  margin-bottom: 10px;
  background-color: #fff;
  margin: 0 auto !important;
  font-size: 12px;
  line-height: 14px;
  margin: 0;
  text-align: justify;
  padding: 10px 0px 10px 0px; }

.checkout-cart-index .row.custom_alert .col-sm-10 {
  line-height: 16px;
  padding-left: 3px; }

.checkout-cart-index .custom_alert .col-sm-3 {
  padding-top: 3px;
  padding-left: 3px;
  padding-bottom: 0px;
  padding-right: 0px; }

.checkout-cart-index .custom_alert .col-sm-2 {
  padding-top: 5px;
  padding-bottom: 0px;
  padding-left: 0px;
  padding-right: 0px; }

.checkout-cart-index .custom_alert .col-sm-1 {
  padding-top: 3px;
  padding-left: 3px;
  padding-bottom: 0px;
  padding-right: 0px; }

.checkout-cart-index .custom_alert .icon {
  width: 40px;
  margin-right: .8rem; }

@media (max-width: 768px) {
  .cart-container form.form-cart {
    width: 100%; } }

@media (max-width: 768px) {
  .cart-container form.form-cart table {
    display: block; } }

.cart-container form.form-cart table thead th {
  width: 15%;
  color: #999;
  font-weight: 400;
  border: 0; }
  @media (max-width: 1280px) {
    .cart-container form.form-cart table thead th {
      width: auto; } }
  @media (max-width: 768px) {
    .cart-container form.form-cart table thead th:not(.item) {
      display: none; } }
  .cart-container form.form-cart table thead th.item {
    width: 35%; }
    @media (max-width: 1280px) {
      .cart-container form.form-cart table thead th.item {
        width: 30%; } }
  .cart-container form.form-cart table thead th.delete {
    width: 5%; }
    @media (max-width: 1280px) {
      .cart-container form.form-cart table thead th.delete {
        width: auto; } }

@media (max-width: 768px) {
  .cart-container form.form-cart table tbody tr {
    position: relative;
    border-bottom: 1px solid #eee;
    padding-bottom: 20px; }
    .cart-container form.form-cart table tbody tr:last-child {
      border-bottom: 0; } }

.cart-container form.form-cart table tbody tr td {
  border: 0; }
  @media (max-width: 768px) {
    .cart-container form.form-cart table tbody tr td.item .product-item-photo {
      width: 40%;
      max-width: 40%;
      position: absolute; }
      .cart-container form.form-cart table tbody tr td.item .product-item-photo .product-image-container {
        min-width: 80%; } }
  @media (max-width: 540px) {
    .cart-container form.form-cart table tbody tr td.item .product-item-photo {
      padding: 0 15px; }
      .cart-container form.form-cart table tbody tr td.item .product-item-photo .product-image-container {
        min-width: 100%; } }
  .cart-container form.form-cart table tbody tr td.item .product-item-details {
    text-align: left; }
    @media (max-width: 1280px) {
      .cart-container form.form-cart table tbody tr td.item .product-item-details {
        display: block; } }
    @media (max-width: 768px) {
      .cart-container form.form-cart table tbody tr td.item .product-item-details {
        margin: 0; } }
  .cart-container form.form-cart table tbody tr td.item .product-item-name {
    color: #019DF4;
    font-weight: bold;
    font-size: 16px;
    display: block;
    margin-top: 6px; }
    @media (max-width: 1280px) {
      .cart-container form.form-cart table tbody tr td.item .product-item-name {
        font-size: 14px;
        line-height: normal; } }
  .cart-container form.form-cart table tbody tr td.item .product-item-stock {
    display: block;
    text-align: left;
    font-weight: bold;
    font-size: 14px; }
    .cart-container form.form-cart table tbody tr td.item .product-item-stock.in-stock {
      color: #4fb62f; }
    .cart-container form.form-cart table tbody tr td.item .product-item-stock.out-stock {
      color: #cd3800; }
  .cart-container form.form-cart table tbody tr td .cart-price .price {
    color: #313235;
    font-size: 18px; }
  .cart-container form.form-cart table tbody tr td.qty .control-qty {
    width: 28px;
    height: 28px;
    color: #fff;
    background: #019DF4;
    vertical-align: middle;
    display: inline-block;
    border-radius: 50%;
    font-size: 18px;
    font-weight: bold;
    text-align: center;
    line-height: 28px;
    cursor: pointer; }
    @media (max-width: 768px) {
      .cart-container form.form-cart table tbody tr td.qty .control-qty {
        text-align: center; } }
    .cart-container form.form-cart table tbody tr td.qty .control-qty:not(.disable):hover {
      color: #fff;
      background: #000; }
    .cart-container form.form-cart table tbody tr td.qty .control-qty.disable {
      color: #fff;
      background: #ccc;
      line-height: 25px;
      border: none;
      pointer-events: none; }
  .cart-container form.form-cart table tbody tr td.qty .control.qty {
    display: inline-block; }
    .cart-container form.form-cart table tbody tr td.qty .control.qty input {
      width: 4em; }
  @media (max-width: 768px) {
    .cart-container form.form-cart table tbody tr td.delete.col {
      right: 0;
      padding-top: 25px;
      position: absolute; } }
  .cart-container form.form-cart table tbody tr td.delete .action-edit, .cart-container form.form-cart table tbody tr td.delete .action-towishlist {
    display: none !important; }
  .cart-container form.form-cart table tbody tr td.delete .action-delete {
    margin: 0;
    border: 0;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background: url(../images/icons/delete.png) no-repeat center;
    -webkit-background-size: 20px 20px;
            background-size: 20px;
    background-color: #f4f4f4; }
    .cart-container form.form-cart table tbody tr td.delete .action-delete:hover {
      border: 0;
      background: url(../images/icons/delete-white.png) no-repeat center;
      -webkit-background-size: 20px 20px;
              background-size: 20px;
      background-color: #000; }
    .cart-container form.form-cart table tbody tr td.delete .action-delete span {
      display: none; }
  @media (max-width: 768px) {
    .cart-container form.form-cart table tbody tr td.col.item, .cart-container form.form-cart table tbody tr td.col.price, .cart-container form.form-cart table tbody tr td.col.qty, .cart-container form.form-cart table tbody tr td.col.subtotal {
      width: 100%;
      padding-left: 40% !important;
      padding-right: 50px !important;
      text-align: left;
      float: left; } }

.cart-container form.form-cart table tbody input.input-text {
  border: 0;
  color: #000;
  font-size: 16px; }

.cart-container form.form-cart table .col.price, .cart-container form.form-cart table .col.qty, .cart-container form.form-cart table .col.subtotal, .cart-container form.form-cart table .col.msrp, .cart-container form.form-cart table .col.delete {
  font-size: 14px;
  text-align: center;
  vertical-align: middle;
  position: relative; }

.cart-container form.form-cart table .col.qty div.mage-error {
  left: 50%;
  width: 180px;
  font-size: 12px;
  margin-left: -90px;
  position: absolute;
  -webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
          box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
  background: #fff;
  padding: 5px;
  border-radius: 5px;
  white-space: normal; }

.cart-container form.form-cart table .price-excluding-tax .price {
  width: 100%;
  font-size: 14px;
  float: left; }

.cart-container form.form-cart .cart.main.actions .action {
  color: #313235;
  background: none;
  border: 1px solid #313235;
  padding: 7px 15px;
  height: 44px;
  font-size: 16px;
  line-height: 30px;
  font-weight: bold; }
  .cart-container form.form-cart .cart.main.actions .action.continue {
    color: #019DF4;
    border: 1px solid #019DF4; }
    .cart-container form.form-cart .cart.main.actions .action.continue:hover {
      background: #313235;
      border-color: #313235; }
  .cart-container form.form-cart .cart.main.actions .action.continue:before, .cart-container form.form-cart .cart.main.actions .action.update:before {
    line-height: 28px; }
  .cart-container form.form-cart .cart.main.actions .action:hover {
    color: #fff;
    background: #313235;
    border-color: #313235; }

.cart-container #gift-options-cart {
  display: none !important; }

.cart-container .cart-summary {
  text-align: left;
  color: #000;
  background: none;
  border: 1px solid #ddd; }
  @media (max-width: 768px) {
    .cart-container .cart-summary {
      top: 0 !important;
      width: 100%; } }
  .cart-container .cart-summary > .title {
    font-weight: bold; }
  .cart-container .cart-summary .mark, .cart-container .cart-summary mark {
    width: 60%;
    background: none; }
    .cart-container .cart-summary .mark .value, .cart-container .cart-summary mark .value {
      width: 100%;
      float: left; }
  .cart-container .cart-summary .label {
    color: #000;
    padding-left: 0; }
  .cart-container .cart-summary .block.giftcard {
    display: none; }
  .cart-container .cart-summary .block > .title strong[role='heading'] {
    font-size: 1.3rem; }
  .cart-container .cart-summary .block .fieldset .field:not(.choice) > .label {
    font-size: 12px; }
  .cart-container .cart-summary .block .fieldset {
    width: 100%;
    float: left; }
    .cart-container .cart-summary .block .fieldset .methods .field > .label {
      width: 94%;
      white-space: normal;
      word-break: break-word;
      font-weight: normal;
      text-align: left;
      float: right; }
  .cart-container .cart-summary .totals-tax-details {
    border-bottom: 0; }
  .cart-container .cart-summary .mark, .cart-container .cart-summary .cart-totals .amount, .cart-container .cart-summary .opc-block-summary .table-totals .amount {
    font-size: 12px;
    border-bottom: 0; }
  @media (max-width: 768px) {
    .cart-container .cart-summary .cart-totals .amount, .cart-container .cart-summary .opc-block-summary .table-totals .amount {
      width: 40%;
      float: left; } }
  .cart-container .cart-summary input[type=checkbox], .cart-container .cart-summary input[type=radio] {
    display: inline-block; }
    .cart-container .cart-summary input[type=checkbox] ~ .label, .cart-container .cart-summary input[type=radio] ~ .label {
      font-size: 100%;
      padding-left: .6em; }
  .cart-container .cart-summary .checkout-methods-items a {
    font-size: 14px; }
  .cart-container .cart-summary div.primary {
    width: 100%; }
  .cart-container .cart-summary button.action.primary {
    width: 100%;
    min-width: 140px;
    background: #019DF4;
    display: inline-block;
    border: 0;
    color: #FFFFFF;
    font-size: 13px;
    font-weight: normal;
    line-height: 19px;
    text-align: center;
    text-transform: uppercase;
    vertical-align: middle;
    white-space: nowrap;
    padding: 14px 17px;
    margin: 0; }
    .cart-container .cart-summary button.action.primary:hover {
      background: #000; }

.checkout-index-index .field[name="shippingAddress.postcode"] {
  display: none !important; }

.checkout-index-index .page-wrapper .page-main .columns .column.main {
  max-width: 1300px;
  margin: 0 auto; }
  @media (min-width: 768px) {
    .checkout-index-index .page-wrapper .page-main .columns .column.main {
      width: 90%; } }

.checkout-index-index .checkout-container {
  margin: 40px 0 20px; }
  .checkout-index-index .checkout-container .custom-slide .modal-header {
    padding: 0; }
    .checkout-index-index .checkout-container .custom-slide .modal-header .action-close {
      z-index: 9; }

.checkout-index-index .opc-progress-bar-item {
  width: 33% !important; }
  .checkout-index-index .opc-progress-bar-item > span {
    font-size: 1.3rem; }
    @media (max-width: 768px) {
      .checkout-index-index .opc-progress-bar-item > span {
        font-size: 1rem; } }
    .checkout-index-index .opc-progress-bar-item > span:after {
      color: #019DF4;
      font-size: 1.3rem;
      line-height: 28px; }
  .checkout-index-index .opc-progress-bar-item._active:before {
    background: #019DF4; }
  .checkout-index-index .opc-progress-bar-item._active > span:before {
    background: #019DF4; }
  .checkout-index-index .opc-progress-bar-item._active > span:after {
    color: #019DF4;
    font-size: 1.8rem; }

.checkout-index-index .opc-estimated-wrapper {
  background: #ecebe8; }
  .checkout-index-index .opc-estimated-wrapper .estimated-block {
    text-align: left; }
  .checkout-index-index .opc-estimated-wrapper .minicart-wrapper {
    width: auto; }
    .checkout-index-index .opc-estimated-wrapper .minicart-wrapper .action.showcart {
      border: 0;
      background: none; }
      .checkout-index-index .opc-estimated-wrapper .minicart-wrapper .action.showcart .counter.qty {
        width: 18px;
        height: 18px;
        line-height: 18px;
        background: red;
        border-radius: 50%; }

.checkout-index-index .checkout-payment-method .payment-method-content > .actions-toolbar {
  display: inline-block;
  float: none; }
  .checkout-index-index .checkout-payment-method .payment-method-content > .actions-toolbar > .primary .action.primary {
    font-size: 20px;
    line-height: 45px;
    padding: 0 25px; }

@media (max-width: 768px) {
  .checkout-index-index .opc-wrapper {
    padding: 0 15px; } }

.checkout-index-index .opc-wrapper .shipping-address-item.selected-item {
  border-color: #000; }
  .checkout-index-index .opc-wrapper .shipping-address-item.selected-item:after {
    background: #000; }

.checkout-index-index .opc-wrapper .col.col-method {
  text-align: center; }

.checkout-index-index .opc-wrapper .table-checkout-shipping-method .col {
  text-align: left; }
  .checkout-index-index .opc-wrapper .table-checkout-shipping-method .col:first-child {
    text-align: center; }

.checkout-index-index .opc-wrapper input[type=checkbox], .checkout-index-index .opc-wrapper input[type=radio] {
  display: inline-block;
  margin: 0; }

.checkout-index-index .opc-wrapper .payment-method {
  font-size: 13px;
  font-weight: normal;
  padding: .2em .6em .3em; }
  @media (max-width: 768px) {
    .checkout-index-index .opc-wrapper .payment-method {
      padding: 0; } }
  .checkout-index-index .opc-wrapper .payment-method .label {
    font-size: 13px;
    font-weight: normal; }
  @media (max-width: 768px) {
    .checkout-index-index .opc-wrapper .payment-method .actions-toolbar .action {
      margin: 0 0 10px; } }

.checkout-index-index .opc-wrapper .payment-option .form {
  width: 100%;
  max-width: 450px;
  display: inline-block;
  float: none; }

@media (min-width: 768px) {
  .checkout-index-index .opc-wrapper .actions-toolbar div.primary {
    float: left;
    margin: 0 0 10px; } }

.checkout-index-index .opc-wrapper .actions-toolbar .secondary .action {
  color: #999;
  background: none;
  border: 1px solid #ccc;
  padding: 7px 15px;
  height: 44px;
  font-size: 16px;
  line-height: 30px;
  font-weight: normal;
  min-width: 180px;
  border-radius: 0 8px; }
  .checkout-index-index .opc-wrapper .actions-toolbar .secondary .action:hover {
    color: #fff;
    background: #000;
    border-color: #000; }

.checkout-index-index .opc-wrapper .checkout-payment-method .payment-option.giftcardaccount {
  display: none !important; }

.checkout-index-index .opc-wrapper #custom-billing-step .checkout-billing-address .billing-cancel {
  margin-top: 0px; }

.checkout-index-index .opc-wrapper .step-title, .checkout-index-index .opc-block-shipping-information .shipping-information-title, .checkout-index-index .opc-block-summary > .title, .checkout-index-index .checkout-agreements-items .checkout-agreements-item-title {
  font-size: 26px;
  font-weight: bold;
  text-align: center; }

.checkout-index-index .step-title {
  color: #313235; }

.checkout-index-index .opc-summary-wrapper .modal-content {
  border-radius: 0; }
  @media (min-width: 768px) {
    .checkout-index-index .opc-summary-wrapper .modal-content {
      -webkit-box-shadow: none;
              box-shadow: none; } }

.checkout-index-index .opc-block-summary {
  background: none; }
  .checkout-index-index .opc-block-summary > .title {
    font-size: 1.3rem; }
  .checkout-index-index .opc-block-summary .minicart-items-wrapper {
    max-height: none; }
  .checkout-index-index .opc-block-summary .minicart-items .product-item-inner {
    display: block; }
    .checkout-index-index .opc-block-summary .minicart-items .product-item-inner .product-item-name-block {
      width: 100%;
      display: block;
      padding: 0; }
      .checkout-index-index .opc-block-summary .minicart-items .product-item-inner .product-item-name-block .product-item-name {
        color: #019DF4;
        font-weight: bold;
        font-size: 16px; }
  .checkout-index-index .opc-block-summary .minicart-items .details-qty {
    color: #999999;
    font-size: 14px; }
    .checkout-index-index .opc-block-summary .minicart-items .details-qty .label {
      color: #999999;
      padding-left: 0; }
  .checkout-index-index .opc-block-summary .minicart-items .product.options {
    text-align: left; }
    .checkout-index-index .opc-block-summary .minicart-items .product.options .content .label {
      color: #000;
      width: 100%;
      text-align: left;
      padding: 0; }
  .checkout-index-index .opc-block-summary .product-item .price {
    color: #313235;
    font-size: 14px;
    font-weight: bold; }
  .checkout-index-index .opc-block-summary .mark, .checkout-index-index .opc-block-summary mark {
    width: 60%;
    background: none; }
    .checkout-index-index .opc-block-summary .mark .label, .checkout-index-index .opc-block-summary mark .label {
      color: #000;
      padding-left: 0; }

.checkout-index-index .opc-block-shipping-information .shipping-information-title {
  font-size: 1.3rem; }

.checkout-index-index .opc-block-shipping-information .shipping-information-content {
  text-align: left; }

.checkout-index-index .continue.primary {
  background: transparent;
  color: #313235;
  border: 1px solid #313235; }

.checkout-index-index .continue.primary:hover {
  background: #313235;
  color: #ffffff; }

.checkout-index-index .custom_alert {
  color: #000 !important;
  border-radius: 0.7rem;
  border: 1px solid #1428A0 !important;
  background-color: #fff;
  margin:12px auto!important;
  font-size: 12px;
  line-height: 14px;
  text-align: justify;
  padding:8px 0 8px 0;
  font-weight:bold; }

.checkout-index-index .custom_alert .icon {
  width: 40px;
  margin-right: .8rem;
  margin-left:.8rem;
 }

.checkout-index-index .billing-address-details {
  padding: 10px; }

.checkout-index-index .billing-address-invoice-alert {
  border: 1px solid #019DF4;
  border-radius: 6px;
  padding: 10px;
  margin: 15% 0 0 0;
  line-height: 15px;
  overflow: hidden; }

.checkout-index-index .billing-address-invoice-alert p {
  float: left !important;
  margin-bottom: 0px;
  line-height: 20px;
  width: 85%; }

.checkout-index-index .billing-address-invoice-alert p a {
  font-weight: 800 !important;
  color: #019DF4 !important; }

.checkout-index-index .billing-address-invoice-alert .icon {
  width: 35px !important;
  margin-right: .8rem;
  float: left; }

.checkout-index-index li#custom-billing-step .step-title {
  text-align: left !important;
  font-size: 32px !important;
  padding-bottom: 0px !important; }

.checkout-index-index .billing-address-same-as-shipping-block {
  padding-top: 10px; }

.checkout-index-index li#shipping .step-title {
  text-align: left !important;
  font-size: 32px !important;
  padding-bottom: 0px !important; }

.checkout-index-index div#checkout-step-shipping {
  padding-top: 10px; }

.checkout-index-index .payment-group .step-title {
  border-bottom: 1px solid #cccccc;
  text-align: left !important;
  font-size: 32px !important;
  padding-bottom: 0px !important; }

.checkout-index-index #checkout .opc-progress-bar .opc-progress-bar-item span {
  font-size: 18px;
  font-weight: 800;
  color: #DDDDDD; }

.checkout-index-index #checkout .opc-progress-bar .opc-progress-bar-item._active span {
  font-size: 18px;
  font-weight: 800;
  color: #019DF4; }

.checkout-index-index .minimsg {
  border-bottom: 1px solid #ccc !important; }

.checkout-index-index .credit-card-types.item._active {
  border: 0px; }

.checkout-index-index .billing-address-details.row {
  border: 1px solid #000;
  border-radius: .7rem;
  padding: 1rem 0;
  margin-left: 0; }

.checkout-index-index #checkout-payment-method-load {
  border-bottom: 1px solid #cccccc;
  margin-bottom: 20px !important; }

.checkout-index-index .checkout-payment-method .payment-option-title {
  border-top: 0px !important; }

.checkout-index-index .checkout-payment-method .payment-method-title {
  margin: 0; }

.checkout-index-index .tradein_alert {
  font-weight: 400;
  color: #000 !important;
  padding: .5rem .5rem .5rem .5rem;
  border-radius: .7rem;
  border: 1px solid #019DF4 !important;
  margin-bottom: 10px;
  background-color: #fff;
  width: 100%; }

.checkout-index-index .alert_shipping {
  width: 60% !important; }

.checkout-index-index .tradein_alert .icon {
  width: 50px;
  margin-right: .8rem;
  margin: 0 auto; }

.checkout-index-index .tradein_alert a {
  font-weight: bold;
  color: #019DF4 !important; }

.checkout-index-index .tradein_alert .col-sm-1 {
  padding: 2px 0px 5px 0px;
  text-align: center; }

.checkout-index-index .tradein_alert .col-sm-11 {
  padding-left: 5px; }

.checkout-index-index .tradein_alert .col-sm-11 p {
  line-height: 20px; }

.checkout-index-index .box-step-content {
  background: #FFFFFF 0% 0% no-repeat padding-box;
  -webkit-box-shadow: 0px 3px 6px #00000029;
          box-shadow: 0px 3px 6px #00000029;
  border: 2px solid #CFCBCB;
  overflow: hidden;
  margin-top: 20px; }
  .checkout-index-index .box-step-content label {
    margin-bottom: 0;
    font-size: 14px !important;
    font-family: "Telefonica-Regular" !important; }

.checkout-index-index .p0 {
  padding: 0; }

.checkout-index-index .bd2 {
  border-left: 2px solid #CFCBCB; }

.checkout-index-index .payment-group-item.debitcard > a {
  color: #000 !important;
  padding-left: 1rem; }

@media (max-width: 540px) {
  .billing-address-invoice-alert {
    margin: 5% 0 0 0 !important; }
  .opc-progress-bar-item {
    width: 33% !important; }
  .billing-address-invoice-alert p {
    font-size: 12px !important; } }

.checkout-agreements-block .action-show {
  font-size: 14px;
  font-weight: bold; }

.checkout-onepage-success form .actions-toolbar {
  text-align: center;
  margin: 0 auto !important; }

.checkout-payment-method .ccard.fieldset > .field .fields.group.group-2 .field.month, .checkout-payment-method .ccard.fieldset > .field .fields.group.group-2 .field.year {
  width: 50% !important; }

div#credomatic_cc_type_exp_div, div#credomatic_cc_type_cvv_div {
  width: 39%;
  float: left; }

div#credomatic_cc_type_exp_div {
  margin-right: 2%; }

.checkout-payment-method .ccard .year .select {
  width: 100%; }

.checkout-payment-method .ccard .number .input-text {
  width: 80% !important; }

.checkout-payment-method .ccard > .field.cvv > .control {
  padding-right: 0; }

.field-tooltip {
  top: -7px; }

.checkout-payment-method .payment-method-content .fieldset > .field.type .control {
  margin-left: 0 !important;
  margin-top: 20px; }

.checkout-payment-method .credit-card-types img {
  -webkit-filter: none;
  -webkit-transition: all .6s ease;
  width: 50px !important;
  height: 30px !important; }

.checkout-payment-method .credit-card-types {
  margin-top: 20px; }

div#credomaticvisa_cc_type_exp_div, div#credomaticvisa_cc_type_cvv_div {
  width: 39%;
  float: left; }

div#credomaticvisa_cc_type_exp_div {
  margin-right: 2%; }

div#credomaticmastercard_cc_type_exp_div, div#credomaticmastercard_cc_type_cvv_div {
  width: 39%;
  float: left; }

div#credomaticmastercard_cc_type_exp_div {
  margin-right: 2%; }

@media (max-width: 768px) {
  .checkout-index-index .bd2 {
    border-left: 0; }
  div#credomatic_cc_type_exp_div, div#credomatic_cc_type_cvv_div {
    width: 100%;
    float: none; }
  div#credomaticvisa_cc_type_exp_div, div#credomaticvisa_cc_type_cvv_div {
    width: 100%;
    float: none; }
  div#credomaticmastercard_cc_type_exp_div, div#credomaticmastercard_cc_type_cvv_div {
    width: 100%;
    float: none; }
  .field-tooltip {
    top: -38px; } }

.checkout-payment-method .ccard > .field.cvv .field-tooltip {
  left: 100%; }

.checkout-payment-method .ccard.fieldset > .field .fields.group.group-2 .field {
  width: 80% !important; }

.invoice_uncheck {
  color: #8a8a8a !important;
  font-weight: 600; }

.check_addres {
  display: inline-grid; }

.invoice_uncheck_title {
  color: #000 !important; }

/* The Modal (background) */
.custom-modal {
  display: none;
  /* Hidden by default */
  position: fixed;
  /* Stay in place */
  z-index: 100;
  /* Sit on top */
  padding-top: 100px;
  /* Location of the box */
  left: 0;
  top: 0;
  width: 100%;
  /* Full width */
  height: 100%;
  /* Full height */
  overflow: auto;
  /* Enable scroll if needed */
  background-color: black;
  /* Fallback color */
  background-color: rgba(0, 0, 0, 0.4);
  /* Black w/ opacity */ }

/* Modal Content */
.custom-modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  width: 60%; }

/* The Close Button */
.custom-close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold; }

.custom-close:hover,
.custom-close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer; }

.custom-modal-content button {
  width: auto;
  min-width: 120px;
  font-size: 16px;
  padding: 0 25px;
  display: inline-block;
  text-align: center;
  text-transform: uppercase;
  vertical-align: middle;
  background: 0 0;
  min-height: 40px;
  line-height: 40px;
  white-space: normal;
  border-radius: 5px;
  float: none;
  color: #019DF4;
  border: 2px solid #019DF4; }

.custom-modal-content button:hover {
  background-color: #019DF4;
  border: 2px solid #019DF4;
  color: #ffffff; }

.custom-modal-content h4 {
  padding: 1.6rem; }

#credomaticvisa_cc_number-error {
  display: none; }

#credomaticmastercard_cc_number-error {
  display: none; }

table.payment-result {
  text-align: left; }

.checkout-success .actions-toolbar .primary {
  float: none;
  display: inline-block; }

.message.info {
  color: #000;
  text-align: center;
  background: none;
  margin: 20px auto;
  padding: 15px 20px 15px 40px;
  border: 1px solid #000; }
  .message.info > *:first-child:before {
    top: 25px;
    color: #000;
    font-size: 40px; }

.message.success, .message.info, .message.warning, .message.error {
  font-size: 1.3rem; }

.modals-wrapper .modal-popup .modal-inner-wrap {
  max-width: 650px; }
  @media only screen and (max-width: 540px) {
    .modals-wrapper .modal-popup .modal-inner-wrap {
      width: 90%;
      max-width: 650px; } }
  .modals-wrapper .modal-popup .modal-inner-wrap .modal-header, .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer {
    border: 0; }
  .modals-wrapper .modal-popup .modal-inner-wrap .modal-content {
    font-size: 20px;
    font-weight: bold;
    padding: 0 15px;
    border-radius: 0;
    -webkit-box-shadow: none;
            box-shadow: none;
    border: 0; }
    .modals-wrapper .modal-popup .modal-inner-wrap .modal-content form {
      font-size: 14px;
      font-weight: 400; }
  .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer {
    text-align: center; }
    @media only screen and (max-width: 540px) {
      .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer {
        padding: 1rem 1rem 3rem; } }
    .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button {
      width: auto;
      min-width: 120px;
      font-size: 16px;
      padding: 0 25px;
      display: inline-block;
      text-align: center;
      text-transform: uppercase;
      vertical-align: middle;
      background: none;
      min-height: 40px;
      line-height: 40px;
      white-space: normal;
      border-radius: 5px;
      float: none; }
      @media only screen and (max-width: 540px) {
        .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button {
          width: 100%;
          margin: 0 0 10px; }
          .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button:last-child {
            margin: 0; } }
      .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button.action-primary, .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button.action.primary {
        color: #fff;
        background: #019DF4;
        border: 2px solid #019DF4; }
      .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button.action-secondary, .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button.action.secondary {
        color: #019DF4;
        border: 2px solid #019DF4; }
        .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button.action-secondary:hover, .modals-wrapper .modal-popup .modal-inner-wrap .modal-footer button.action.secondary:hover {
          color: #fff;
          background: #313235;
          border: 2px solid #313235; }

.block.review-add {
  width: 100%;
  padding: 60px 0;
  float: left; }
  .block.review-add .block-title {
    display: block;
    text-align: left; }
  .block.review-add form.review-form {
    width: 100%; }

.customer-review {
  float: left;
  width: 100%; }
  .customer-review .product-media {
    margin: 0; }
  .customer-review .product-details {
    width: 100%;
    text-align: left;
    float: left; }
    .customer-review .product-details .product-info {
      width: 100%;
      float: left; }
  .customer-review .review-details {
    width: 100%;
    text-align: left;
    float: left; }
    .customer-review .review-details .review-content {
      margin-bottom: 0; }

.page-multiple-wishlist .page-title-wrapper {
  margin: 40px 0 20px; }
  .page-multiple-wishlist .page-title-wrapper .page-title {
    width: 100%;
    height: auto;
    position: relative; }

.page-multiple-wishlist .column.main form {
  padding: 0;
  border: 0; }

.wishlist-index-index .products-grid.wishlist .product-item {
  width: 100%;
  padding-bottom: 20px;
  border-bottom: 1px solid #e5e5e5;
  margin-left: 0; }
  @media (min-width: 768px) {
    .wishlist-index-index .products-grid.wishlist .product-item {
      width: 100%;
      margin: 0 0 20px; } }
  .wishlist-index-index .products-grid.wishlist .product-item .product-item-info {
    width: 100%;
    margin: 0;
    position: relative;
    float: left; }
    @media (max-width: 768px) {
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info {
        padding-left: 40%;
        float: left; } }
    .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-photo {
      top: 0;
      left: 0;
      width: 20%;
      float: left;
      padding-right: 20px;
      margin-bottom: 0; }
      @media (max-width: 991px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-photo {
          width: 30%;
          padding-right: 0; } }
      @media (max-width: 768px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-photo {
          margin: 0;
          width: 40%;
          max-width: 40%;
          position: absolute; } }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-photo .product-image-container {
        float: left; }
        @media (max-width: 768px) {
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-photo .product-image-container {
            max-width: 80%; } }
    .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-name, .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-reviews-summary {
      width: 80%;
      float: right; }
      @media (max-width: 991px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-name, .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-reviews-summary {
          width: 100%; } }
      @media (max-width: 768px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-name, .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-reviews-summary {
          margin-left: 0; } }
    .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-name a {
      width: 25%;
      font-size: 16px;
      font-weight: bold;
      line-height: 1.42857143;
      margin-top: 6px;
      float: left; }
      @media (max-width: 768px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-name a {
          width: 100%; } }
    .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-reviews-summary .rating-summary, .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-reviews-summary .reviews-actions {
      float: left; }
    .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-reviews-summary .rating-summary .rating-result > span:before {
      color: #019DF4; }
    .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-reviews-summary .reviews-actions {
      margin: 0; }
    .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .price-box {
      top: 6px;
      left: 40%;
      width: 20%;
      position: absolute;
      text-align: center;
      padding: 0 15px; }
      @media (max-width: 991px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .price-box {
          left: 30%;
          width: 25%;
          margin: 0; } }
      @media (max-width: 768px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .price-box {
          left: 0;
          width: 100%;
          padding: 0;
          position: relative;
          text-align: left;
          float: left; } }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .price-box .price-label {
        display: none; }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .price-box .price {
        color: #333;
        font-size: 18px;
        font-weight: 700;
        line-height: 1.4; }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .price-box .old-price .price {
        color: #019DF4;
        font-weight: 500;
        font-size: 16px; }
    .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner {
      top: 6px;
      left: 60%;
      width: 40%;
      position: absolute; }
      @media (max-width: 991px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner {
          left: 55%;
          width: 45%; } }
      @media (max-width: 768px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner {
          left: 0;
          width: 100%;
          padding: 0;
          position: relative; } }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .comment-box {
        display: none; }
      @media (max-width: 768px) {
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart {
          margin: 0;
          width: 100%;
          float: left; } }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .fieldset {
        margin-bottom: 6px; }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty {
        font-size: 14px;
        text-align: center;
        vertical-align: middle;
        position: relative;
        margin: 0; }
        @media (max-width: 768px) {
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty {
            margin: 20px 0; } }
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty .label {
          display: none; }
        @media (min-width: 768px) {
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty .control {
            width: 100%; } }
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty .control-qty, .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty .input-text.qty {
          display: inline-block; }
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty .control-qty {
          width: 28px;
          height: 28px;
          color: #fff;
          background: #019DF4;
          vertical-align: middle;
          border-radius: 50%;
          font-size: 18px;
          line-height: 27px;
          font-weight: bold;
          cursor: pointer; }
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty .control-qty:hover {
            background: #000; }
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty .control-qty.disable {
            color: #999;
            background: none;
            border: 1px solid #ccc;
            pointer-events: none; }
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty .input-text.qty {
          width: 4em;
          color: #000;
          font-size: 16px;
          font-weight: bold;
          border: 0; }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty, .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .product-item-actions {
        width: 50%;
        float: left; }
        @media (max-width: 768px) {
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty, .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .product-item-actions {
            width: 100%;
            max-width: 50%;
            min-width: 140px;
            display: block;
            float: none; } }
        @media (max-width: 375px) {
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .field.qty, .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .product-item-actions {
            max-width: 100%; } }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .product-item-actions {
        text-align: center;
        margin: 0; }
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .product-item-actions .actions-primary {
          width: 140px;
          display: inline-block; }
          @media (max-width: 991px) {
            .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner .box-tocart .product-item-actions .actions-primary {
              width: 100%; } }
      .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner > .product-item-actions {
        width: 50%;
        margin: 0;
        float: right;
        text-align: center; }
        @media (max-width: 768px) {
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner > .product-item-actions {
            width: 100%;
            float: left; } }
        .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner > .product-item-actions .action-secondary {
          width: 140px;
          height: 42px;
          color: #999;
          font-size: 1.4rem;
          line-height: 30px;
          font-weight: normal;
          text-align: center;
          text-transform: uppercase;
          border: 1px solid #ccc;
          border-radius: 3px;
          padding: 7px 15px;
          background: none;
          display: inline-block;
          -webkit-transition: .5s all ease;
          -o-transition: .5s all ease;
          transition: .5s all ease;
          margin: 0 0 6px;
          float: none; }
          .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner > .product-item-actions .action-secondary:hover {
            color: #fff;
            background: #000;
            border: 1px solid #000; }
          @media (max-width: 991px) {
            .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner > .product-item-actions .action-secondary {
              width: 100%; } }
          @media (max-width: 768px) {
            .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner > .product-item-actions .action-secondary {
              max-width: 50%;
              min-width: 140px;
              display: block; } }
          @media (max-width: 375px) {
            .wishlist-index-index .products-grid.wishlist .product-item .product-item-info .product-item-inner > .product-item-actions .action-secondary {
              max-width: 100%; } }

.wishlist-index-index form.form-wishlist-items > .actions-toolbar .primary .action {
  color: #999;
  background: none;
  border: 1px solid #ccc;
  padding: 7px 15px;
  height: 44px;
  font-size: 16px;
  line-height: 30px;
  font-weight: normal;
  border-radius: 3px; }
  .wishlist-index-index form.form-wishlist-items > .actions-toolbar .primary .action:hover {
    color: #fff;
    background: #000; }

.customer-main-wrapper .pagebuilder-column-group {
  margin-top: 40px; }

.customer-main-wrapper .sidebar div[data-content-type="buttons"] {
  padding-top: 0; }
  .customer-main-wrapper .sidebar div[data-content-type="buttons"]:last-child div:last-child a {
    border-bottom: 1px solid #ddd; }
  .customer-main-wrapper .sidebar div[data-content-type="buttons"] .pagebuilder-button-link {
    width: 100%;
    color: #000;
    font-size: 16px;
    font-weight: 400;
    text-decoration: none;
    text-align: left !important;
    border-top: 1px solid #ddd;
    padding: 20px 15px;
    position: relative;
    margin: 0; }
    .customer-main-wrapper .sidebar div[data-content-type="buttons"] .pagebuilder-button-link:hover {
      color: #019DF4; }
    .customer-main-wrapper .sidebar div[data-content-type="buttons"] .pagebuilder-button-link:after {
      top: 50%;
      right: 10px;
      color: #019DF4;
      content: '\e608';
      font-size: 32px;
      font-weight: bold;
      line-height: normal;
      font-family: 'icons-blank-theme';
      vertical-align: middle;
      display: inline-block;
      position: absolute;
      margin-top: -16px; }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> c49500efabe445d4006e127085ba49a20df5e83e
